import json

dataset = []

safe_templates = [
    r"""DATA : gv_num1 TYPE p VALUE '1234'.
DATA : gv_num2 TYPE p DECIMALS 2 VALUE '12.34'.

DATA : gv_num3 TYPE i VALUE 1234.

DATA : gv_num4 TYPE n VALUE 1234.
DATA : gv_num5 TYPE n LENGTH 2 VALUE 1234.
DATA : gv_num6 TYPE n LENGTH 3 VALUE 1234.
DATA : gv_num7 TYPE n LENGTH 4 VALUE 1234.

WRITE : gv_num1.
WRITE :/ gv_num2.
WRITE :/ gv_num3.
WRITE :/ gv_num4.
WRITE :/ gv_num5.
WRITE :/ gv_num6.
WRITE :/ gv_num7.""",
    r"""DATA : GV_TEXT1 VALUE 'A'.
DATA : GV_TEXT2 LENGTH 3 TYPE C VALUE 'ABC'.
DATA : GV_TEXT3(5) TYPE C VALUE 'ABCDE'.
DATA : GV_TEXT4 TYPE STRING VALUE 'ABCDE'.
DATA : GV_LEN TYPE i.

DATA : GV_TIME TYPE T.

DATA : GV_DATE TYPE D.

GV_TIME = SY-UZEIT.
GV_DATE = SY-DATUM.
GV_LEN = STRLEN( GV_TEXT3 ).

WRITE : GV_TEXT1.
WRITE :/ GV_TEXT2.
WRITE :/ GV_TEXT3.
WRITE :/ GV_TEXT4.
WRITE :/ GV_LEN.
WRITE :/ GV_TIME.
WRITE :/ GV_DATE.""",
    r"""DATA : TEXT1 TYPE STRING,
       TEXT2(4) TYPE C.

TEXT1 = 'ABAP'.
TEXT2 = 'B'.

FIND TEXT2 IN TEXT1.

IF SY-SUBRC = 0.
  WRITE :/ TEXT2.
ENDIF.""",
    r"""DATA : TEXT3 TYPE STRING,
       TEXT4(4) TYPE C.

TEXT3 = 'ABAP'.
TEXT4 = 'BBAP'.

REPLACE TEXT3 IN TEXT3 WITH TEXT4.
WRITE :/ TEXT3.""",
    r"""DATA : TEXT5 TYPE STRING,
       TEXT6(4) TYPE C.

TEXT5 = 'ABAP'.
TEXT6 = 'abap'.

TRANSLATE TEXT5 TO LOWER CASE.
TRANSLATE TEXT6 TO UPPER CASE.
WRITE :/ TEXT5.
WRITE :/ TEXT6.""",
    r"""DATA : TEXT7 TYPE STRING,
       TEXT8(5) TYPE C.

TEXT7 = ' ABAP'.
TEXT8 = ' ABAP'.

SHIFT TEXT7.
WRITE :/ TEXT7.
WRITE :/ TEXT8.""",
    r"""DATA : TEXT9 TYPE STRING,
       TEXT10(8) TYPE C,
       TEXT11(8) TYPE C.

TEXT9 = 'AB   AP'.
TEXT10 = 'AB   AP'.
TEXT11 = 'AB   AP'.

CONDENSE TEXT9.
CONDENSE TEXT10 NO-GAPS.""",
    r"""DATA : TEXT12 TYPE STRING,
       TEXT13(8) TYPE C.

TEXT12 = ' B P'.
TEXT13 = 'AAAA'.

OVERLAY TEXT12 WITH TEXT13.

WRITE :/ TEXT12.
WRITE :/ TEXT13.""",
    r"""DATA : TEXT14 TYPE STRING,
       TEXT15(4) TYPE C,
       TEXT16(4) TYPE C.

TEXT14 = 'AB'.
TEXT15 = 'AP'.

CONCATENATE TEXT14 TEXT15 INTO TEXT16.

WRITE :/ TEXT14.
WRITE :/ TEXT15.
WRITE :/ TEXT16.""",
    r"""DATA : TEXT17 TYPE STRING,
       TEXT18(4) TYPE C,
       TEXT19(4) TYPE C.

TEXT17 = 'AB+AP'.
SPLIT TEXT17 AT '+' INTO TEXT18 TEXT19.

WRITE :/ TEXT17.
WRITE :/ TEXT18.
WRITE :/ TEXT19.""",
    r"""DATA : gv_num8 TYPE i VALUE 5,
       gv_num9 TYPE i VALUE 3,
       gv_num10 TYPE i.

gv_num10 = gv_num8 + gv_num9.
WRITE :/ gv_num10.

gv_num10 = gv_num8 - gv_num9.
WRITE :/ gv_num10.

gv_num10 = gv_num8 * gv_num9.
WRITE :/ gv_num10.

gv_num10 = gv_num8 / gv_num9.
WRITE :/ gv_num10.

gv_num10 = gv_num8 DIV gv_num9.
WRITE :/ gv_num10.

gv_num10 = gv_num8 MOD gv_num9.
WRITE :/ gv_num10.

gv_num10 = gv_num8 ** gv_num9.
WRITE :/ gv_num10.""",
    r"""TYPES T_HELLO(20) TYPE C.

DATA GV_TEXT5 TYPE T_HELLO.
DATA GV_TEXT6 LIKE GV_TEXT5.

GV_TEXT5 = '안녕하세요'.
GV_TEXT6 = '반갑습니다'.

WRITE :/ GV_TEXT5.
WRITE :/ GV_TEXT6.""",
    r"""TYPES : BEGIN OF T_ZEDT08,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 20,
  ZENAME TYPE C LENGTH 20,
  END OF T_ZEDT08.

DATA : GS_ZEDT08 TYPE T_ZEDT08.

GS_ZEDT08-ZCODE = 'SSU-08'.
GS_ZEDT08-ZKNAME = '김도윤'.
GS_ZEDT08-ZENAME = 'KIM'.

WRITE :/ GS_ZEDT08-ZCODE.
WRITE :/ GS_ZEDT08-ZKNAME.
WRITE :/ GS_ZEDT08-ZENAME.""",
    r"""TYPES : BEGIN OF T_ZEDT08_1,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 20,
  ZENAME TYPE C LENGTH 20,
  END OF T_ZEDT08_1.

TYPES : BEGIN OF T_ZEDT08_2.
  INCLUDE TYPE T_ZEDT08_1.
  TYPES : TITLE TYPE C LENGTH 10,
          GRADE TYPE C LENGTH 1,
  END OF T_ZEDT08_2.

DATA : GS_ZEDT08_1 TYPE T_ZEDT08_2.

GS_ZEDT08_1-ZCODE = 'SSU-08'.
GS_ZEDT08_1-ZKNAME = '김도윤'.
GS_ZEDT08_1-ZENAME = 'KIM'.
GS_ZEDT08_1-TITLE = '컴퓨터학부'.
GS_ZEDT08_1-GRADE = '3'.

WRITE :/ GS_ZEDT08_1-ZCODE.
WRITE :/ GS_ZEDT08_1-ZKNAME.
WRITE :/ GS_ZEDT08_1-ZENAME.
WRITE :/ GS_ZEDT08_1-TITLE.
WRITE :/ GS_ZEDT08_1-GRADE.""",
    r"""DATA : BEGIN OF GS_ZEDT08_2,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 20,
  ZENAME TYPE C LENGTH 20,
  END OF GS_ZEDT08_2.

GS_ZEDT08_2-ZCODE = 'SSU-08'.
GS_ZEDT08_2-ZKNAME = '김도윤'.
GS_ZEDT08_2-ZENAME = 'KIM'.

WRITE :/ GS_ZEDT08_2-ZCODE.
WRITE :/ GS_ZEDT08_2-ZKNAME.
WRITE :/ GS_ZEDT08_2-ZENAME.""",
    r"""DATA : BEGIN OF GS_ZEDT08_3,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 20,
  ZENAME TYPE C LENGTH 20,
  END OF GS_ZEDT08_3.

DATA : BEGIN OF GS_ZEDT08_4.
  INCLUDE STRUCTURE GS_ZEDT08_3.
  DATA : TITLE TYPE C LENGTH 10,
          GRADE TYPE C LENGTH 1,
  END OF GS_ZEDT08_4.

GS_ZEDT08_4-ZCODE = 'SSU-8'.
GS_ZEDT08_4-ZKNAME = '김도윤'.
GS_ZEDT08_4-ZENAME = 'KIM'.
GS_ZEDT08_4-TITLE = '컴퓨터학부'.
GS_ZEDT08_4-GRADE = '4'.

WRITE :/ GS_ZEDT08_4-ZCODE.
WRITE :/ GS_ZEDT08_4-ZKNAME.
WRITE :/ GS_ZEDT08_4-ZENAME.
WRITE :/ GS_ZEDT08_4-TITLE.
WRITE :/ GS_ZEDT08_4-GRADE.""",
    r"""DATA : GS_ZEDT08 TYPE ZEDT08_001.

GS_ZEDT08-ZCODE = 'SSU-08'.
GS_ZEDT08-ZKNAME = '김도윤'.
GS_ZEDT08-ZENAME = 'KIM'.
GS_ZEDT08-ZGENDER = 'M'.
GS_ZEDT08-ZTEL = '01091406307'.

WRITE :/ GS_ZEDT08-ZCODE.
WRITE :/ GS_ZEDT08-ZKNAME.
WRITE :/ GS_ZEDT08-ZENAME.
WRITE :/ GS_ZEDT08-ZGENDER.
WRITE :/ GS_ZEDT08-ZTEL.""",
    r"""DATA : BEGIN OF GS_ZEDT08_001,
  ZCODE TYPE ZEDT08_001-ZCODE,
  ZKNAME TYPE ZEDT08_001-ZKNAME,
  ZENAME TYPE ZEDT08_001-ZENAME,
  ZGENDER TYPE ZEDT08_001-ZGENDER,
  ZTEL TYPE ZEDT08_001-ZTEL,
  END OF GS_ZEDT08_001.

  GS_ZEDT08_001-ZCODE = 'SSU-08'.
  GS_ZEDT08_001-ZKNAME = '김도윤'.
  GS_ZEDT08_001-ZENAME = 'KIM'.
  GS_ZEDT08_001-ZGENDER = 'M'.
  GS_ZEDT08_001-ZTEL = '01091406307'.

  WRITE :/ GS_ZEDT08_001-ZCODE.
  WRITE :/ GS_ZEDT08_001-ZKNAME.
  WRITE :/ GS_ZEDT08_001-ZENAME.
  WRITE :/ GS_ZEDT08_001-ZGENDER.
  WRITE :/ GS_ZEDT08_001-ZTEL.""",
    r"""DATA : BEGIN OF GS_ZEDT08_002,
  ZCODE TYPE ZCODE08,
  ZKNAME TYPE ZKNAME08,
  ZENAME TYPE ZENAME08,
  ZGENDER TYPE ZGUBUN08,
  ZTEL TYPE ZTEL08,
  END OF GS_ZEDT08_002.

  GS_ZEDT08_002-ZCODE = 'SSU-08'.
  GS_ZEDT08_002-ZKNAME = '김도윤'.
  GS_ZEDT08_002-ZENAME = 'KIM'.
  GS_ZEDT08_002-ZGENDER = 'M'.
  GS_ZEDT08_002-ZTEL = '01091406307'.

  WRITE :/ GS_ZEDT08_002-ZCODE.
  WRITE :/ GS_ZEDT08_002-ZKNAME.
  WRITE :/ GS_ZEDT08_002-ZENAME.
  WRITE :/ GS_ZEDT08_002-ZGENDER.
  WRITE :/ GS_ZEDT08_002-ZTEL.""",
    r"""DATA : GS_ZEDS08 TYPE ZEDS08_001.

GS_ZEDS08-ZCODE = 'SSU-08'.
GS_ZEDS08-ZKNAME = '김도윤'.
GS_ZEDS08-ZENAME = 'KIM'.
GS_ZEDS08-ZGENDER = 'M'.
GS_ZEDS08-ZTEL = '010-9140-6307'.

WRITE :/ GS_ZEDS08-ZCODE.
WRITE :/ GS_ZEDS08-ZKNAME.
WRITE :/ GS_ZEDS08-ZENAME.
WRITE :/ GS_ZEDS08-ZGENDER.
WRITE :/ GS_ZEDS08-ZTEL.""",
    r"""DATA : GS_ZEDG08 TYPE ZTG08_ZED08.
DATA : GS_ZTITLE TYPE ZTG08_ZTITLE.

GS_ZEDG08-ZCODE = 'SSU-08'.
GS_ZEDG08-ZKNAME = '김도윤'.
GS_ZEDG08-ZENAME = 'KIM'.
GS_ZEDG08-ZGENDER = 'M'.
GS_ZEDG08-ZTEL = '01091406307'.
GS_ZTITLE = '컴퓨터학부'.

WRITE :/ GS_ZEDG08-ZCODE.
WRITE :/ GS_ZEDG08-ZKNAME.
WRITE :/ GS_ZEDG08-ZENAME.
WRITE :/ GS_ZEDG08-ZGENDER.
WRITE :/ GS_ZEDG08-ZTEL.
WRITE :/ GS_ZTITLE.""",
    r"""DATA : BEGIN OF GS_NAME,
  NAME1 TYPE C LENGTH 10,
  NAME2 TYPE C LENGTH 10,
  END OF GS_NAME.

GS_NAME-NAME1 = '미지정'.
GS_NAME-NAME2 = '김도윤'.

WRITE :/ GS_NAME-NAME1.
WRITE :/ GS_NAME-NAME2.

GS_NAME-NAME1 = GS_NAME-NAME2.

WRITE :/ GS_NAME-NAME1.
WRITE :/ GS_NAME-NAME2.

GS_NAME-NAME1 = '미지정'.

MOVE GS_NAME-NAME2 TO GS_NAME-NAME1.

WRITE :/ GS_NAME-NAME1.
WRITE :/ GS_NAME-NAME2.""",
    r"""DATA : BEGIN OF GS_NAME_001,
  NAME1 TYPE C LENGTH 10,
  DEGREE1 TYPE P DECIMALS 2,
  END OF GS_NAME_001.

GS_NAME_001-NAME1 = '김도윤'.
GS_NAME_001-DEGREE1 = '35.12'.

MOVE GS_NAME_001-DEGREE1 TO GS_NAME_001-NAME1.

CONDENSE GS_NAME-NAME1 NO-GAPS.

WRITE :/ GS_NAME_001-NAME1.
WRITE :/ GS_NAME_001-DEGREE1.""",
    r"""DATA : GV_DATA1(8) VALUE 'ABCDEFGH',
      GV_DATA2(8),
      GV_DATA3(8).
DATA : GV_START TYPE I VALUE 2,
      GV_LENGTH TYPE I VALUE 4.

MOVE GV_DATA1+2(3) TO GV_DATA2.
WRITE :/ GV_DATA2.

MOVE GV_DATA1+GV_START(GV_LENGTH) TO GV_DATA3.
WRITE :/ GV_DATA3.""",
    r"""DATA : GV_DATA01(8) VALUE 'ABCDEFGH',
      GV_DATA02(8) VALUE 'IJKLMNOP'.
DATA : GV_START01 TYPE I VALUE 2,
      GV_LENGTH01 TYPE I VALUE 4.

MOVE GV_DATA01+GV_START01(GV_LENGTH01) TO GV_DATA02+GV_START01(GV_LENGTH01).
WRITE :/ GV_DATA02.""",
    r"""DATA : BEGIN OF GS_NAME_002,
  NAME1 TYPE C LENGTH 10,
  NAME2 TYPE C LENGTH 10,
  END OF GS_NAME_002.

GS_NAME_002-NAME1 = '미지정'.
GS_NAME_002-NAME2 = '김도윤'.

WRITE GS_NAME_002-NAME2 TO GS_NAME_002-NAME1.

WRITE :/ GS_NAME_002-NAME1.
WRITE :/ GS_NAME_002-NAME2.""",
    r"""DATA : BEGIN OF GS_ZEDT08_1,
  ZCODE TYPE ZEDT08_001-ZCODE,
  ZKNAME TYPE ZEDT08_001-ZKNAME,
  ZENAME TYPE ZEDT08_001-ZENAME,
  ZGENDER TYPE ZEDT08_001-ZGENDER,
  ZTEL TYPE ZEDT08_001-ZTEL,
  END OF GS_ZEDT08_1.

DATA : BEGIN OF GS_ZEDT08_2,
  ZCODE TYPE ZEDT08_001-ZCODE,
  ZKNAME TYPE ZEDT08_001-ZKNAME,
  ZENAME TYPE ZEDT08_001-ZENAME,
  ZGENDER TYPE ZEDT08_001-ZGENDER,
  ZTEL TYPE ZEDT08_001-ZTEL,
  END OF GS_ZEDT08_2.

GS_ZEDT08_1-ZCODE = 'SSU-08'.
GS_ZEDT08_1-ZKNAME = '김도윤'.
GS_ZEDT08_1-ZENAME = 'KIM'.
GS_ZEDT08_1-ZGENDER = 'M'.
GS_ZEDT08_1-ZTEL = '01091406307'.

MOVE-CORRESPONDING GS_ZEDT08_1 TO GS_ZEDT08_2.

WRITE :/ GS_ZEDT08_1-ZCODE.
WRITE :/ GS_ZEDT08_1-ZKNAME.
WRITE :/ GS_ZEDT08_1-ZENAME.
WRITE :/ GS_ZEDT08_1-ZGENDER.
WRITE :/ GS_ZEDT08_1-ZTEL.""",
    r"""DATA : BEGIN OF GS_ZEDT08_3,
  ZCODE TYPE ZEDT08_001-ZCODE,
  ZKNAME TYPE ZEDT08_001-ZKNAME,
  ZENAME TYPE ZEDT08_001-ZENAME,
  ZGENDER TYPE ZEDT08_001-ZGENDER,
  ZTEL TYPE ZEDT08_001-ZTEL,
  END OF GS_ZEDT08_3.

DATA : BEGIN OF GS_ZEDT08_4,
  ZGENDER TYPE ZEDT08_001-ZGENDER,
  ZCODE TYPE ZEDT08_001-ZCODE,
  ZKNAME TYPE ZEDT08_001-ZKNAME,
  ZENAME TYPE ZEDT08_001-ZENAME,
  ZTEL TYPE ZEDT08_001-ZTEL,
  END OF GS_ZEDT08_4.

GS_ZEDT08_3-ZCODE = 'SSU-08'.
GS_ZEDT08_3-ZKNAME = '김도윤'.
GS_ZEDT08_3-ZENAME = 'KIM'.
GS_ZEDT08_3-ZGENDER = 'M'.
GS_ZEDT08_3-ZTEL = '01091406307'.

MOVE-CORRESPONDING GS_ZEDT08_3 TO GS_ZEDT08_4.

WRITE :/ GS_ZEDT08_4-ZCODE.
WRITE :/ GS_ZEDT08_4-ZKNAME.
WRITE :/ GS_ZEDT08_4-ZENAME.
WRITE :/ GS_ZEDT08_4-ZGENDER.
WRITE :/ GS_ZEDT08_4-ZTEL.""",
    r"""DATA : BEGIN OF GS_ZEDT08_5,
  ZCODE TYPE ZEDT08_001-ZCODE,
  ZKNAME TYPE ZEDT08_001-ZKNAME,
  ZENAME TYPE ZEDT08_001-ZENAME,
  ZGENDER TYPE ZEDT08_001-ZGENDER,
  ZTEL TYPE ZEDT08_001-ZTEL,
  END OF GS_ZEDT08_5.

DATA : BEGIN OF GS_ZEDT08_6,
  ZGENDER TYPE ZEDT08_001-ZGENDER,
  ZCODE TYPE ZEDT08_001-ZCODE,
  ZKNAME TYPE ZEDT08_001-ZKNAME,
  ZENAME TYPE ZEDT08_001-ZENAME,
  ZTEL TYPE ZEDT08_001-ZTEL,
  END OF GS_ZEDT08_6.

GS_ZEDT08_5-ZCODE = 'SSU-08'.
GS_ZEDT08_5-ZKNAME = '김도윤'.
GS_ZEDT08_5-ZENAME = 'KIM'.
GS_ZEDT08_5-ZGENDER = 'M'.
GS_ZEDT08_5-ZTEL = '01011112222'.

MOVE GS_ZEDT08_5 TO GS_ZEDT08_6.

WRITE :/ GS_ZEDT08_6-ZCODE.
WRITE :/ GS_ZEDT08_6-ZKNAME.
WRITE :/ GS_ZEDT08_6-ZENAME.
WRITE :/ GS_ZEDT08_6-ZGENDER.
WRITE :/ GS_ZEDT08_6-ZTEL.""",
    r"""DATA : BEGIN OF GS_ZEDT08_7,
  ZCODE TYPE ZEDT08_001-ZCODE,
  ZKNAME TYPE ZEDT08_001-ZKNAME,
  ZENAME TYPE ZEDT08_001-ZENAME,
  ZGENDER TYPE ZEDT08_001-ZGENDER,
  ZTEL TYPE ZEDT08_001-ZTEL,
  END OF GS_ZEDT08_7.

DATA : BEGIN OF GS_ZEDT08_8,
  ZCODE TYPE ZEDT08_001-ZCODE,
  ZKNAME TYPE ZEDT08_001-ZKNAME,
  ZENAME TYPE ZEDT08_001-ZENAME,
  ZGENDER TYPE ZEDT08_001-ZGENDER,
  ZTEL TYPE ZEDT08_001-ZTEL,
  END OF GS_ZEDT08_8.

GS_ZEDT08_7-ZCODE = 'SSU-08'.
GS_ZEDT08_7-ZKNAME = '김도윤'.
GS_ZEDT08_7-ZENAME = 'KIM'.
GS_ZEDT08_7-ZGENDER = 'M'.
GS_ZEDT08_7-ZTEL = '01011112222'.

MOVE GS_ZEDT08_7 TO GS_ZEDT08_8.

WRITE :/ GS_ZEDT08_8-ZCODE.
WRITE :/ GS_ZEDT08_8-ZKNAME.
WRITE :/ GS_ZEDT08_8-ZENAME.
WRITE :/ GS_ZEDT08_8-ZGENDER.
WRITE :/ GS_ZEDT08_8-ZTEL.""",
    r"""DATA : BEGIN OF GS_ZEDT08_9,
  ZCODE TYPE ZEDT08_001-ZCODE,
  ZKNAME TYPE ZEDT08_001-ZKNAME,
  ZENAME TYPE ZEDT08_001-ZENAME,
  ZGENDER TYPE ZEDT08_001-ZGENDER,
  ZTEL TYPE ZEDT08_001-ZTEL,
  END OF GS_ZEDT08_9.

DATA : BEGIN OF GS_ZEDT08_10,
  ZZZZZZCODE TYPE ZEDT08_001-ZCODE,
  ZZZZZZZKNAME TYPE ZEDT08_001-ZKNAME,
  ZZZZZZZZENAME TYPE ZEDT08_001-ZENAME,
  ZZZZZZZZZGENDER TYPE ZEDT08_001-ZGENDER,
  ZZZZZZZZTEL TYPE ZEDT08_001-ZTEL,
  END OF GS_ZEDT08_10.

GS_ZEDT08_9-ZCODE = 'SSU-08'.
GS_ZEDT08_9-ZKNAME = '김도윤'.
GS_ZEDT08_9-ZENAME = 'KIM'.
GS_ZEDT08_9-ZGENDER = 'M'.
GS_ZEDT08_9-ZTEL = '01011112222'.

MOVE GS_ZEDT08_9 TO GS_ZEDT08_10.

WRITE :/ GS_ZEDT08_10-ZZZZZZCODE.
WRITE :/ GS_ZEDT08_10-ZZZZZZZKNAME.
WRITE :/ GS_ZEDT08_10-ZZZZZZZZENAME.
WRITE :/ GS_ZEDT08_10-ZZZZZZZZZGENDER.
WRITE :/ GS_ZEDT08_10-ZZZZZZZZTEL.""",
    r"""DATA : BEGIN OF GS_ZEDT08_11,
  ZCODE TYPE ZEDT08_001-ZCODE,
  ZKNAME TYPE ZEDT08_001-ZKNAME,
  ZENAME TYPE ZEDT08_001-ZENAME,
  ZGENDER TYPE ZEDT08_001-ZGENDER,
  ZTEL TYPE ZEDT08_001-ZTEL,
  END OF GS_ZEDT08_11.

DATA : BEGIN OF GS_ZEDT08_12,
  ZZZZZZCODE TYPE ZEDT08_001-ZCODE,
  ZZZZZZZKNAME TYPE ZEDT08_001-ZKNAME,
  ZZZZZZZZENAME TYPE ZEDT08_001-ZENAME,
  ZZZZZZZZZGENDER TYPE ZEDT08_001-ZGENDER,
  ZZZZZZZZTEL TYPE ZEDT08_001-ZTEL,
  END OF GS_ZEDT08_12.

GS_ZEDT08_11-ZCODE = 'SSU-08'.
GS_ZEDT08_11-ZKNAME = '김도윤'.
GS_ZEDT08_11-ZENAME = 'KIM'.
GS_ZEDT08_11-ZGENDER = 'M'.
GS_ZEDT08_11-ZTEL = '01011112222'.

MOVE-CORRESPONDING GS_ZEDT08_11 TO GS_ZEDT08_12.

WRITE :/ GS_ZEDT08_12-ZZZZZZCODE.
WRITE :/ GS_ZEDT08_12-ZZZZZZZKNAME.
WRITE :/ GS_ZEDT08_12-ZZZZZZZZENAME.
WRITE :/ GS_ZEDT08_12-ZZZZZZZZZGENDER.
WRITE :/ GS_ZEDT08_12-ZZZZZZZZTEL.""",
    r"""CONSTANTS : C_RATE TYPE I VALUE '100'.

DATA : GV_SUM1 TYPE I,
      GV_SUM2 TYPE I,
      GV_SUM3 TYPE I.

GV_SUM1 = '10.00'.
GV_SUM2 = '20.00'.
GV_SUM3 = '30.00'.

GV_SUM1 = GV_SUM1 * C_RATE.
GV_SUM2 = GV_SUM2 * C_RATE.
GV_SUM3 = GV_SUM3 * C_RATE.

WRITE :/ GV_SUM1.
WRITE :/ GV_SUM2.
WRITE :/ GV_SUM3.""",
    r"""CONSTANTS : BEGIN OF C_STUDENT,
  ZCODE(10) VALUE 'SSU-01',
  ZKNAME(10) VALUE '김도윤',
  ZENAME(10) VALUE 'KIM',
  END OF C_STUDENT.

WRITE :/ C_STUDENT-ZCODE.
WRITE :/ C_STUDENT-ZKNAME.
WRITE :/ C_STUDENT-ZENAME.""",
    r"""CONSTANTS : C_NUM1 TYPE I VALUE '10'.
DATA : NUM1 TYPE I VALUE '10'.

NUM1 = NUM1 + 1.

WRITE :/ C_NUM1.
WRITE :/ NUM1.""",
    r"""TABLES : ZEDT08_001.

SELECT SINGLE * FROM ZEDT08_001.

WRITE :/ ZEDT08_001-ZCODE.
WRITE :/ ZEDT08_001-ZKNAME.
WRITE :/ ZEDT08_001-ZENAME.
WRITE :/ ZEDT08_001-ZGENDER.
WRITE :/ ZEDT08_001-ZTEL.""",
    r"""TABLES : SCARR.

SELECT * FROM SCARR.

  WRITE :/ SCARR-CARRID, SCARR-CARRNAME.

ENDSELECT.""",
    r"""DATA : GS_ZEDT08 TYPE ZEDT08_001.
DATA : GT_ZEDT08 TYPE TABLE OF ZEDT08_001.

GS_ZEDT08-ZCODE = 'SSU-08'.
GS_ZEDT08-ZPERNR = '0000000001'.
GS_ZEDT08-ZKNAME = '김도윤'.
GS_ZEDT08-ZENAME = 'KIM'.
GS_ZEDT08-ZGENDER = 'M'.
GS_ZEDT08-ZTEL = '01091406307'.

APPEND GS_ZEDT08 TO GT_ZEDT08.

GS_ZEDT08-ZCODE = 'SSU-02'.
GS_ZEDT08-ZPERNR = '0000000002'.
GS_ZEDT08-ZKNAME = '제니'.
GS_ZEDT08-ZENAME = 'JENNY'.
GS_ZEDT08-ZGENDER = 'F'.
GS_ZEDT08-ZTEL = '01022223333'.

APPEND GS_ZEDT08 TO GT_ZEDT08.""",
    r"""DATA : GS_ZEDT08_001 TYPE ZEDT08_001.
DATA : GT_ZEDT08_001 TYPE TABLE OF ZEDT08_001.

DATA : GT_ZEDT08_002 TYPE ZEDT08_001 OCCURS 0 WITH HEADER LINE.
DATA : GT_ZEDT08_003 LIKE ZEDT08_001 OCCURS 0 WITH HEADER LINE.
DATA : GT_ZEDT08_004 TYPE TABLE OF ZEDT08_001 WITH HEADER LINE.
DATA : GT_ZEDT08_005 LIKE TABLE OF ZEDT08_001 WITH HEADER LINE.""",
    r"""DATA : GT_ZEDT08_006 TYPE ZEDT08_001 OCCURS 0 WITH HEADER LINE.

GT_ZEDT08_006-ZCODE = 'SSU-08'.
GT_ZEDT08_006-ZPERNR = '0000000001'.
GT_ZEDT08_006-ZKNAME = '김도윤'.
GT_ZEDT08_006-ZENAME = 'KIM'.
GT_ZEDT08_006-ZGENDER = 'M'.
GT_ZEDT08_006-ZTEL = '01091406307'.""",
    r"""DATA : GT_ZEDT08_006 TYPE ZEDT08_001 OCCURS 0 WITH HEADER LINE.

GT_ZEDT08_006-ZCODE = 'SSU-08'.
GT_ZEDT08_006-ZPERNR = '0000000001'.
GT_ZEDT08_006-ZKNAME = '김도윤'.
GT_ZEDT08_006-ZENAME = 'KIM'.
GT_ZEDT08_006-ZGENDER = 'M'.
GT_ZEDT08_006-ZTEL = '01091406307'.

APPEND GT_ZEDT08_006 TO GT_ZEDT08_006.""",
    r"""DATA : BEGIN OF GS_STUDENT,
  ZPERNR TYPE ZEDT08_001-ZPERNR,
  ZCODE TYPE ZEDT08_001-ZCODE,
  ZKNAME TYPE ZEDT08_001-ZKNAME,
  ZENAME TYPE ZEDT08_001-ZENAME,
  ZGENDER TYPE ZEDT08_001-ZGENDER,
  ZTEL TYPE ZEDT08_001-ZTEL,
  ZMNAME TYPE ZEDT08_002-ZMNAME,
  END OF GS_STUDENT.

DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT.

GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZPERNR = '0000000001'.
GS_STUDENT-ZKNAME = '김도윤'.
GS_STUDENT-ZENAME = 'KIM'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01091406307'.
GS_STUDENT-ZMNAME = '컴퓨터학부'.

APPEND GS_STUDENT TO GT_STUDENT.""",
    r"""DATA : BEGIN OF GS_STUDENT_001,
  ZPERNR LIKE ZEDT08_001-ZPERNR,
  ZCODE LIKE ZEDT08_001-ZCODE,
  ZKNAME LIKE ZEDT08_001-ZKNAME,
  ZENAME LIKE ZEDT08_001-ZENAME,
  ZGENDER LIKE ZEDT08_001-ZGENDER,
  ZTEL LIKE ZEDT08_001-ZTEL,
  ZMNAME LIKE ZEDT08_002-ZMNAME,
  END OF GS_STUDENT_001.

DATA : GT_STUDENT_001 LIKE TABLE OF GS_STUDENT_001.

GS_STUDENT_001-ZCODE = 'SSU-08'.
GS_STUDENT_001-ZPERNR = '0000000001'.
GS_STUDENT_001-ZKNAME = '김도윤'.
GS_STUDENT_001-ZENAME = 'KIM'.
GS_STUDENT_001-ZGENDER = 'M'.
GS_STUDENT_001-ZTEL = '01091406307'.
GS_STUDENT_001-ZMNAME = '컴퓨터학부'.

APPEND GS_STUDENT_001 TO GT_STUDENT_001.""",
    r"""DATA : BEGIN OF GS_STUDENT1,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  ZCLASS TYPE C,
END Of GS_STUDENT1.

DATA : BEGIN OF GS_STUDENT2,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  ZCLASS TYPE C,
END OF GS_STUDENT2.

DATA : GT_STUDENT1 LIKE TABLE OF GS_STUDENT1.
DATA : GT_STUDENT2 LIKE TABLE OF GS_STUDENT2.

GS_STUDENT1-ZCODE = 'SSU-08'.
GS_STUDENT1-ZKNAME = '김도윤'.
GS_STUDENT1-ZENAME = 'KIM'.

GS_STUDENT2-ZCODE = 'SSU-06'.
GS_STUDENT2-ZKNAME = '권용민'.
GS_STUDENT2-ZENAME = 'KWON'.

APPEND GS_STUDENT1 TO GT_STUDENT1.
APPEND GS_STUDENT1 TO GT_STUDENT2.""",
    r"""DATA : BEGIN OF GS_STUDENT3,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  ZCLASS TYPE C,
END Of GS_STUDENT3.

DATA : BEGIN OF GS_STUDENT4,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  ZCLASS TYPE C,
END OF GS_STUDENT4.

DATA : GT_STUDENT3 LIKE TABLE OF GS_STUDENT3.
DATA : GT_STUDENT4 LIKE TABLE OF GS_STUDENT4.

GS_STUDENT3-ZCODE = 'SSU-08'.
GS_STUDENT3-ZKNAME = '김도윤'.
GS_STUDENT3-ZENAME = 'KIM'.

GS_STUDENT4-ZCODE = 'SSU-06'.
GS_STUDENT4-ZKNAME = '권용민'.
GS_STUDENT4-ZENAME = 'KWON'.

APPEND GS_STUDENT3 TO GT_STUDENT3.

MOVE GS_STUDENT3 TO GS_STUDENT4.

APPEND GS_STUDENT3 TO GT_STUDENT4.""",
    r"""DATA : BEGIN OF GS_STUDENT5,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GS_STUDENT5.

DATA : GT_STUDENT5 LIKE TABLE OF GS_STUDENT5.
DATA : GT_STUDENT6 LIKE TABLE OF GS_STUDENT5.

GS_STUDENT5-ZCODE = 'SSU-08'.
GS_STUDENT5-ZKNAME = '김도윤'.
GS_STUDENT5-ZENAME = 'KIM'.

APPEND GS_STUDENT5 TO GT_STUDENT5.

MOVE GT_STUDENT[] TO GT_STUDENT6.""",
    r"""DATA : BEGIN OF GT_STUDENT7 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT7.

DATA : BEGIN OF GT_STUDENT8 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT8.

GT_STUDENT7-ZCODE = 'SSU-08'.
GT_STUDENT7-ZKNAME = '김도윤'.
GT_STUDENT7-ZENAME = 'KIM'.

APPEND GT_STUDENT7.

MOVE GT_STUDENT7 TO GT_STUDENT8.""",
    r"""DATA : BEGIN OF GT_STUDENT9 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT9.

DATA : BEGIN OF GT_STUDENT10 OCCURS 0,
  ZCLASS TYPE C,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT10.

GT_STUDENT9-ZCODE = 'SSU-08'.
GT_STUDENT9-ZKNAME = '김도윤'.
GT_STUDENT9-ZENAME = 'KIM'.

APPEND GT_STUDENT9.

MOVE GT_STUDENT9[] TO GT_STUDENT10[].""",
    r"""DATA : BEGIN OF GT_STUDENT11 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT11.

DATA : BEGIN OF GT_STUDENT12 OCCURS 0,
  ZCLASS TYPE C,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT12.

GT_STUDENT11-ZCODE = 'SSU-08'.
GT_STUDENT11-ZKNAME = '김도윤'.
GT_STUDENT11-ZENAME = 'KIM'.

APPEND GT_STUDENT11.

MOVE-CORRESPONDING GT_STUDENT11 TO GT_STUDENT12.

APPEND GT_STUDENT12.""",
    r"""DATA : BEGIN OF GT_STUDENT13 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT13.

DATA : BEGIN OF GT_STUDENT14 OCCURS 0,
  ZCLASS TYPE C,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT14.

GT_STUDENT13-ZCODE = 'SSU-08'.
GT_STUDENT13-ZKNAME = '김도윤'.
GT_STUDENT13-ZENAME = 'KIM'.

APPEND GT_STUDENT13.

MOVE-CORRESPONDING GT_STUDENT13[] TO GT_STUDENT14[].""",
    r"""DATA : BEGIN OF GS_STUDENT15,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GS_STUDENT15.

DATA : GT_STUDENT15 LIKE TABLE OF GS_STUDENT15.

GS_STUDENT15-ZCODE = 'SSU-08'.
GS_STUDENT15-ZKNAME = '김도윤'.
GS_STUDENT15-ZENAME = 'KIM'.

APPEND GS_STUDENT15 TO GT_STUDENT15.

CLEAR : GT_STUDENT15.""",
    r"""DATA : BEGIN OF GT_STUDENT16 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT16.

GT_STUDENT16-ZCODE = 'SSU-08'.
GT_STUDENT16-ZKNAME = '김도윤'.
GT_STUDENT16-ZENAME = 'KIM'.

APPEND GT_STUDENT16.

CLEAR GT_STUDENT16.""",
    r"""DATA : BEGIN OF GT_STUDENT17 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT17.

GT_STUDENT17-ZCODE = 'SSU-08'.
GT_STUDENT17-ZKNAME = '김도윤'.
GT_STUDENT17-ZENAME = 'KIM'.

APPEND GT_STUDENT17.

CLEAR : GT_STUDENT17[].""",
    r"""DATA : BEGIN OF GT_STUDENT18 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT18.

GT_STUDENT18-ZCODE = 'SSU-08'.
GT_STUDENT18-ZKNAME = '김도윤'.
GT_STUDENT18-ZENAME = 'KIM'.

APPEND GT_STUDENT18.

REFRESH : GT_STUDENT18.

BREAK-POINT.""",
    r"""DATA : BEGIN OF GT_STUDENT19 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT19.

GT_STUDENT19-ZCODE = 'SSU-08'.
GT_STUDENT19-ZKNAME = '김도윤'.
GT_STUDENT19-ZENAME = 'KIM'.

APPEND GT_STUDENT19.

FREE : GT_STUDENT19.

BREAK-POINT.""",
    r"""DATA : BEGIN OF GS_STUDENT,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GS_STUDENT.

DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT.

GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '김도윤'.
GS_STUDENT-ZENAME = 'KIM'.
APPEND GS_STUDENT TO GT_STUDENT.

GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '권용민'.
GS_STUDENT-ZENAME = 'KWON'.
APPEND GS_STUDENT TO GT_STUDENT.

GS_STUDENT-ZCODE = 'SSU-01'.
GS_STUDENT-ZKNAME = '안녕'.
GS_STUDENT-ZENAME = 'Hello'.
APPEND GS_STUDENT TO GT_STUDENT.

SORT GT_STUDENT BY ZKNAME ZCODE DESCENDING.""",
    r"""DATA : BEGIN OF GS_LINE,
  COL1 TYPE C,
END OF GS_LINE.

DATA : GT_LINE LIKE TABLE OF GS_LINE.

DATA : GV_LINE TYPE i.

GS_LINE-COL1 = SY-INDEX.
APPEND GS_LINE TO GT_LINE.

GS_LINE-COL1 = '2'.
APPEND GS_LINE TO GT_LINE.

GS_LINE-COL1 = '3'.
APPEND GS_LINE TO GT_LINE.

DESCRIBE TABLE GT_LINE LINES GV_LINE.

WRITE : GV_LINE.""",
    r"""DATA : BEGIN OF GS_STUDENT1,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GS_STUDENT1.

DATA : GT_STUDENT1 LIKE TABLE OF GS_STUDENT1.

CLEAR : GS_STUDENT1.
GS_STUDENT1-ZCODE = 'SSU-08'.
GS_STUDENT1-ZKNAME = '김도윤'.
GS_STUDENT1-ZENAME = 'KIM'.
INSERT GS_STUDENT1 INTO TABLE GT_STUDENT1.

CLEAR : GS_STUDENT1.
GS_STUDENT1-ZCODE = 'SSU-06'.
GS_STUDENT1-ZKNAME = '권용민'.
GS_STUDENT1-ZENAME = 'KWON'.
INSERT GS_STUDENT1 INTO TABLE GT_STUDENT1.

CLEAR : GS_STUDENT1.
GS_STUDENT1-ZCODE = 'SSU-01'.
GS_STUDENT1-ZKNAME = '안녕'.
GS_STUDENT1-ZENAME = 'HELLO'.
INSERT GS_STUDENT1 INTO GT_STUDENT1 INDEX 2.""",
    r"""DATA : BEGIN OF GS_STUDENT2,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GS_STUDENT2.

DATA : GT_STUDENT2 LIKE TABLE OF GS_STUDENT2.

CLEAR : GS_STUDENT2.
GS_STUDENT2-ZCODE = 'SSU-08'.
GS_STUDENT2-ZKNAME = '김도윤'.
GS_STUDENT2-ZENAME = 'KIM'.
COLLECT GS_STUDENT2 INTO GT_STUDENT2.

CLEAR : GS_STUDENT2.
GS_STUDENT2-ZCODE = 'SSU-06'.
GS_STUDENT2-ZKNAME = '권용민'.
GS_STUDENT2-ZENAME = 'KWON'.
COLLECT GS_STUDENT2 INTO GT_STUDENT2.

CLEAR : GS_STUDENT2.
GS_STUDENT2-ZCODE = 'SSU-01'.
GS_STUDENT2-ZKNAME = '안녕'.
GS_STUDENT2-ZENAME = 'HELLO'.
COLLECT GS_STUDENT2 INTO GT_STUDENT2.""",
    r"""DATA : BEGIN OF GS_STUDENT3,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  ZSUM TYPE I,
END OF GS_STUDENT3.

DATA : GT_STUDENT3 LIKE TABLE OF GS_STUDENT3.

CLEAR : GS_STUDENT3.
GS_STUDENT3-ZCODE = 'SSU-08'.
GS_STUDENT3-ZKNAME = '김도윤'.
GS_STUDENT3-ZENAME = 'KIM'.
GS_STUDENT3-ZSUM = '10000'.
COLLECT GS_STUDENT3 INTO GT_STUDENT3.

CLEAR : GS_STUDENT3.
GS_STUDENT3-ZCODE = 'SSU-06'.
GS_STUDENT3-ZKNAME = '권용민'.
GS_STUDENT3-ZENAME = 'KWON'.
GS_STUDENT3-ZSUM = '10000'.
COLLECT GS_STUDENT3 INTO GT_STUDENT3.

CLEAR : GS_STUDENT3.
GS_STUDENT3-ZCODE = 'SSU-08'.
GS_STUDENT3-ZKNAME = '김도윤'.
GS_STUDENT3-ZENAME = 'KIM'.
GS_STUDENT3-ZSUM = '10000'.
COLLECT GS_STUDENT3 INTO GT_STUDENT3.""",
    r"""DATA : BEGIN OF GS_STUDENT4,
  ZPERNR LIKE ZEDT08_001-ZPERNR,
  ZCODE LIKE ZEDT08_001-ZCODE,
  ZKNAME LIKE ZEDT08_001-ZKNAME,
  ZENAME LIKE ZEDT08_001-ZENAME,
  ZGENDER LIKE ZEDT08_001-ZGENDER,
  ZGNAME TYPE C LENGTH 4,
  ZTEL LIKE ZEDT08_001-ZTEL,
  END OF GS_STUDENT4.

DATA : GT_STUDENT4 LIKE TABLE OF GS_STUDENT4.

CLEAR : GS_STUDENT4, GT_STUDENT4.

GS_STUDENT4-ZPERNR = '0000000001'.
GS_STUDENT4-ZCODE = 'SSU-08'.
GS_STUDENT4-ZKNAME = '김도윤'.
GS_STUDENT4-ZGENDER = 'M'.
GS_STUDENT4-ZTEL = '010-9140-6307'.

IF GS_STUDENT4-ZGENDER = 'M'.
  GS_STUDENT4-ZGNAME = '남자'.
ENDIF.

APPEND GS_STUDENT4 TO GT_STUDENT4.

CLEAR GS_STUDENT4.""",
    r"""DATA : GT_STUDENT5 LIKE TABLE OF GS_STUDENT4.

CLEAR : GS_STUDENT4, GT_STUDENT5.

GS_STUDENT4-ZPERNR = '0000000001'.
GS_STUDENT4-ZCODE = 'SSU-08'.
GS_STUDENT4-ZKNAME = '김도윤'.
GS_STUDENT4-ZGENDER = 'M'.
GS_STUDENT4-ZTEL = '01091406307'.

IF GS_STUDENT4-ZGENDER = 'M'.
  GS_STUDENT4-ZGNAME = '남자'.
ELSEIF GS_STUDENT4-ZGENDER = 'F'.
  GS_STUDENT4-ZGNAME = '여자'.
ELSE.
  GS_STUDENT4-ZGNAME = '기타'.
ENDIF.

APPEND GS_STUDENT4 TO GT_STUDENT5.

CLEAR : GS_STUDENT4.""",
    r"""DATA : GT_STUDENT6 LIKE TABLE OF GS_STUDENT4.

CLEAR : GS_STUDENT4, GT_STUDENT6.

GS_STUDENT4-ZPERNR = '0000000001'.
GS_STUDENT4-ZCODE = 'SSU-08'.
GS_STUDENT4-ZKNAME = '김도윤'.
GS_STUDENT4-ZENAME = 'KIM'.
GS_STUDENT4-ZGENDER = 'M'.
GS_STUDENT4-ZTEL = '01091406307'.

IF ( GS_STUDENT4-ZGENDER = 'M' ) OR ( GS_STUDENT4-ZKNAME = '김도윤' ).
  GS_STUDENT4-ZGNAME = '남자'.
ENDIF.

APPEND GS_STUDENT4 TO GT_STUDENT6.

CLEAR : GS_STUDENT4.""",
    r"""DATA : GV_NUM1 TYPE i.
DATA : GV_NUM2 TYPE i.

GV_NUM1 = 100.
GV_NUM2 = 120.

IF GV_NUM1 > GV_NUM2.
  WRITE :/ 'GV_NUM1이 GV_NUM2보다 큽니다.'.
ELSEIF GV_NUM1 < GV_NUM2.
  WRITE :/ 'GV_NUM1이 GV_NUM2보다 작습니다.'.
ELSE.
  WRITE :/ 'GV_NUM1과 GV_NUM2가 같습니다.'.
ENDIF.""",
    r"""DATA : GV_NUM21 TYPE i.
DATA : GV_NUM22 TYPE i.
DATA : GV_NUM23 TYPE i.

GV_NUM21 = 100.
GV_NUM22 = 120.
GV_NUM23 = 110.

IF GV_NUM21 < GV_NUM22.
  IF GV_NUM21 < GV_NUM23.
    WRITE :/ 'GV_NUM1이 GV_NUM2, GV_NUM3보다 작습니다.'.
  ELSEIF GV_NUM21 > GV_NUM23.
    WRITE :/ 'GV_NUM1이 GV_NUM2보다 작고 GV_NUM3보다 큽니다.'.
  ELSE.
    WRITE :/ 'GV_NUM1이 GV_NUM2보다 작고 GV_NUM3과 같습니다.'.
  ENDIF.
ELSEIF GV_NUM21 > GV_NUM22.
  IF GV_NUM21 < GV_NUM23.
    WRITE :/ 'GV_NUM1이 GV_NUM2보다 크고 GV_NUM3보다 작습니다.'.
  ELSEIF GV_NUM21 > GV_NUM23.
    WRITE :/ 'GV_NUM1이 GV_NUM2, GV_NUM3보다 큽니다.'.
  ELSE.
    WRITE :/ 'GV_NUM1이 GV_NUM2보다 크고 GV_NUM3과 같습니다.'.
  ENDIF.
ELSE.
  IF GV_NUM21 < GV_NUM23.
    WRITE :/ 'GV_NUM1이 GV_NUM2과 같고 GV_NUM3보다 작습니다.'.
  ELSEIF GV_NUM21 > GV_NUM23.
    WRITE :/ 'GV_NUM1이 GV_NUM2과 같고 GV_NUM3보다 큽니다.'.
  ELSE.
    WRITE :/ 'GV_NUM1이 GV_NUM2, GV_NUM3과 같습니다.'.
  ENDIF.
ENDIF.""",
    r"""DATA : GV_NUM31 TYPE i.
DATA : GV_NUM32 TYPE i.

GV_NUM31 = 100.
GV_NUM32 = 120.

IF GV_NUM31 > GV_NUM32.
  WRITE :/ 'GV_NUM1이 GV_NUM2보다 큽니다'.
ELSEIF GV_NUM31 = GV_NUM32.
  WRITE :/ 'GV_NUM1과 GV_NUM2 값이 같습니다.'.
ELSE.
  WRITE :/ 'GV_NUM2가 GV_NUM1보다 큽니다.'.
ENDIF.""",
    r"""DATA : GV_NUM41 TYPE i.
DATA : GV_NUM42 TYPE i.
DATA : GV_NUM43 TYPE i.

GV_NUM41 = 100.
GV_NUM42 = 120.
GV_NUM43 = 110.

IF GV_NUM41 > GV_NUM42.
  IF GV_NUM41 > GV_NUM43.
    WRITE :/ 'GV_NUM1이 ', GV_NUM41, '가장 큰수입니다.'.
  ELSE.
    WRITE :/ 'GV_NUM3이', GV_NUM43, '가장 큰수입니다.'.
  ENDIF.
ELSE.
  IF GV_NUM42 > GV_NUM43.
    WRITE :/ 'GV_NUM2이', GV_NUM42, '가장 큰수입니다.'.
  ELSE.
    WRITE :/ 'GV_NUM3이', GV_NUM43, '가장 큰수입니다.'.
  ENDIF.
ENDIF.""",
    r"""DATA : BEGIN OF GS_STUDENT,
  ZPERNR LIKE ZEDT08_001-ZPERNR,
  ZCODE LIKE ZEDT08_001-ZCODE,
  ZKNAME LIKE ZEDT08_001-ZKNAME,
  ZENAME LIKE ZEDT08_001-ZENAME,
  ZGENDER LIKE ZEDT08_001-ZGENDER,
  ZGNAME TYPE C LENGTH 4,
  ZTEL LIKE ZEDT08_001-ZTEL,
END OF GS_STUDENT.

DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT.

GS_STUDENT-ZPERNR = '0000000001'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '김도윤'.
GS_STUDENT-ZENAME = 'KIM'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01091406307'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '0000000002'.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '권용민'.
GS_STUDENT-ZENAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01000001111'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '0000000003'.
GS_STUDENT-ZCODE = 'SSU-01'.
GS_STUDENT-ZKNAME = '안녕'.
GS_STUDENT-ZENAME = 'HELLO'.
GS_STUDENT-ZGENDER = 'F'.
GS_STUDENT-ZTEL = '01011112222'.
APPEND GS_STUDENT TO GT_STUDENT.

LOOP AT GT_STUDENT INTO GS_STUDENT.

ENDLOOP.

LOOP AT GT_STUDENT INTO GS_STUDENT.
  IF GS_STUDENT-ZGENDER = 'M'.
    GS_STUDENT-ZGNAME = '남자'.
  ELSEIF GS_STUDENT-ZGENDER = 'F'.
    GS_STUDENT-ZGNAME = '여자'.
  ELSE.
    GS_STUDENT-ZGNAME = '기타'.
  ENDIF.
ENDLOOP.

CLEAR : GS_STUDENT.

LOOP AT GT_STUDENT INTO GS_STUDENT.
  IF GS_STUDENT-ZGENDER = 'M'.
    GS_STUDENT-ZGNAME = '남자'.
  ELSEIF GS_STUDENT-ZGENDER = 'F'.
    GS_STUDENT-ZGNAME = '여자'.
  ELSE.
    GS_STUDENT-ZGNAME = '기타'.
  ENDIF.
ENDLOOP.

LOOP AT GT_STUDENT INTO GS_STUDENT WHERE ZGENDER = 'F'.
  IF GS_STUDENT-ZGENDER = 'M'.
    GS_STUDENT-ZGNAME = '남자'.
  ELSEIF GS_STUDENT-ZGENDER = 'F'.
    GS_STUDENT-ZGNAME = '여자'.
  ELSE.
    GS_STUDENT-ZGNAME = '기타'.
  ENDIF.

  CLEAR : GS_STUDENT.
ENDLOOP.

LOOP AT GT_STUDENT INTO GS_STUDENT WHERE ZGENDER = 'F'.
  GS_STUDENT-ZGNAME = '여자'.

  CLEAR : GS_STUDENT.
ENDLOOP.

LOOP AT GT_STUDENT INTO GS_STUDENT.
  IF GS_STUDENT-ZGENDER = 'F'.
    GS_STUDENT-ZGNAME = '여자'.
  ENDIF.

  CLEAR : GS_STUDENT.
ENDLOOP.

LOOP AT GT_STUDENT INTO GS_STUDENT FROM 2 TO 3.
  IF GS_STUDENT-ZGENDER = 'M'.
    GS_STUDENT-ZGNAME = '남자'.
  ELSEIF GS_STUDENT-ZGENDER = 'F'.
    GS_STUDENT-ZGNAME = '여자'.
  ELSE.
    GS_STUDENT-ZGNAME = '기타'.
  ENDIF.

  CLEAR : GS_STUDENT.
ENDLOOP.""",
    r"""DATA : BEGIN OF GS_STUDENT,
  ZPERNR LIKE ZEDT08_001-ZPERNR,
  ZCODE LIKE ZEDT08_001-ZCODE,
  ZKNAME LIKE ZEDT08_001-ZKNAME,
  ZENAME LIKE ZEDT08_001-ZENAME,
  ZGENDER LIKE ZEDT08_001-ZGENDER,
  ZGNAME TYPE C LENGTH 4,
  ZTEL LIKE ZEDT08_001-ZTEL,
END OF GS_STUDENT.

DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT WITH NON-UNIQUE KEY ZCODE.

CLEAR : GS_STUDENT, GT_STUDENT.

GS_STUDENT-ZPERNR = '0000000001'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '김도윤'.
GS_STUDENT-ZENAME = 'KIM'.
GS_STUDENT-ZGENDER = 'F'.
GS_STUDENT-ZTEL = '01091406307'.
APPEND GS_STUDENT TO GT_STUDENT.

GS_STUDENT-ZENAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
MODIFY TABLE GT_STUDENT FROM GS_STUDENT TRANSPORTING ZGENDER.

CLEAR : GS_STUDENT, GT_STUDENT.

GS_STUDENT-ZPERNR = '0000000001'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '김도윤'.
GS_STUDENT-ZENAME = 'KIM'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01091406307'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '0000000002'.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '권용민'.
GS_STUDENT-ZENAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01011112222'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '0000000003'.
GS_STUDENT-ZCODE = 'SSU-01'.
GS_STUDENT-ZKNAME = '손흥민'.
GS_STUDENT-ZENAME = 'SON'.
GS_STUDENT-ZGENDER = 'F'.
GS_STUDENT-ZTEL = '01055555555'.
APPEND GS_STUDENT TO GT_STUDENT.

LOOP AT GT_STUDENT INTO GS_STUDENT.
  IF GS_STUDENT-ZGENDER = 'M'.
    GS_STUDENT-ZGNAME = '남자'.
  ELSEIF GS_STUDENT-ZGENDER = 'F'.
    GS_STUDENT-ZGNAME = '여자'.
  ELSE.
    GS_STUDENT-ZGNAME = '기타'.
  ENDIF.

  MODIFY GT_STUDENT FROM GS_STUDENT TRANSPORTING ZGNAME WHERE ZCODE = GS_STUDENT-ZCODE.

  CLEAR GS_STUDENT.
ENDLOOP.

LOOP AT GT_STUDENT INTO GS_STUDENT.
  IF GS_STUDENT-ZGENDER = 'M'.
    GS_STUDENT-ZGNAME = '남자'.
  ELSEIF GS_STUDENT-ZGENDER = 'F'.
    GS_STUDENT-ZGNAME = '여자'.
  ELSE.
    GS_STUDENT-ZGNAME = '기타'.
  ENDIF.

  MODIFY GT_STUDENT FROM GS_STUDENT INDEX SY-TABIX.

  CLEAR GS_STUDENT.
ENDLOOP.""",
    r"""DATA : BEGIN OF GS_STUDENT,
  ZPERNR LIKE ZEDT08_001-ZPERNR,
  ZCODE LIKE ZEDT08_001-ZCODE,
  ZKNAME LIKE ZEDT08_001-ZKNAME,
  ZENAME LIKE ZEDT08_001-ZENAME,
  ZGENDER LIKE ZEDT08_001-ZGENDER,
  ZGNAME TYPE C LENGTH 4,
  ZTEL LIKE ZEDT08_001-ZTEL,
END OF GS_STUDENT.

DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT.

CLEAR : GS_STUDENT, GT_STUDENT.

GS_STUDENT-ZPERNR = '0000000001'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '김도윤'.
GS_STUDENT-ZENAME = 'KIM'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01011112222'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '0000000002'.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '권용민'.
GS_STUDENT-ZENAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01022223333'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000000003'.
GS_STUDENT-ZCODE = 'SSU-01'.
GS_STUDENT-ZKNAME = '손예진'.
GS_STUDENT-ZENAME = 'SON'.
GS_STUDENT-ZGENDER = 'F'.
GS_STUDENT-ZTEL = '01033334444'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR GS_STUDENT.

LOOP AT GT_STUDENT INTO GS_STUDENT.
  IF GS_STUDENT-ZGENDER NE 'M'.
    DELETE TABLE GT_STUDENT FROM GS_STUDENT.

    IF SY-SUBRC = 0.
    ELSE.
      WRITE :/ '삭제실패'.
    ENDIF.
  ELSE.
    WRITE :/ GS_STUDENT-ZCODE, GS_STUDENT-ZKNAME, GS_STUDENT-ZGENDER.
  ENDIF.
ENDLOOP.

CLEAR GS_STUDENT.

LOOP AT GT_STUDENT INTO GS_STUDENT.
  IF GS_STUDENT-ZGENDER NE 'M'.
    DELETE TABLE GT_STUDENT FROM GS_STUDENT.

    IF SY-SUBRC = 0.
    ELSE.
      WRITE :/ '삭제실패'.
    ENDIF.
  ELSE.
    WRITE :/ GS_STUDENT-ZCODE, GS_STUDENT-ZKNAME, GS_STUDENT-ZGENDER.
  ENDIF.
ENDLOOP.""",
    r"""DATA : GT_STUDENT1 LIKE TABLE OF GS_STUDENT WITH NON-UNIQUE KEY ZGENDER.

CLEAR : GS_STUDENT, GT_STUDENT1.

GS_STUDENT-ZPERNR = '0000000001'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '김도윤'.
GS_STUDENT-ZENAME = 'KIM'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01011112222'.
APPEND GS_STUDENT TO GT_STUDENT1.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '0000000002'.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '권용민'.
GS_STUDENT-ZENAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01022223333'.
APPEND GS_STUDENT TO GT_STUDENT1.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000000003'.
GS_STUDENT-ZCODE = 'SSU-01'.
GS_STUDENT-ZKNAME = '손예진'.
GS_STUDENT-ZENAME = 'SON'.
GS_STUDENT-ZGENDER = 'F'.
GS_STUDENT-ZTEL = '01033334444'.
APPEND GS_STUDENT TO GT_STUDENT1.

DELETE TABLE GT_STUDENT1 WITH TABLE KEY ZGENDER = 'F'.

IF SY-SUBRC = 0.
  LOOP AT GT_STUDENT1 INTO GS_STUDENT.
    WRITE :/ GS_STUDENT-ZCODE, GS_STUDENT-ZKNAME, GS_STUDENT-ZGENDER.
  ENDLOOP.
ENDIF.""",
    r"""DELETE GT_STUDENT WHERE ZGENDER = 'F'.

IF SY-SUBRC = 0.
  LOOP AT GT_STUDENT INTO GS_STUDENT.
    WRITE :/ GS_STUDENT-ZCODE, GS_STUDENT-ZKNAME, GS_STUDENT-ZGENDER.
  ENDLOOP.
ENDIF.""",
    r"""DELETE GT_STUDENT INDEX 1.

IF SY-SUBRC = 0.
  LOOP AT GT_STUDENT INTO GS_STUDENT.
    WRITE :/ GS_STUDENT-ZCODE, GS_STUDENT-ZKNAME, GS_STUDENT-ZGENDER.
  ENDLOOP.
ENDIF.""",
    r"""CLEAR : GS_STUDENT, GT_STUDENT.

GS_STUDENT-ZPERNR = '0000000001'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '김도윤'.
GS_STUDENT-ZENAME = 'KIM'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01011112222'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000000003'.
GS_STUDENT-ZCODE = 'SSU-01'.
GS_STUDENT-ZKNAME = '손예진'.
GS_STUDENT-ZENAME = 'SON'.
GS_STUDENT-ZGENDER = 'F'.
GS_STUDENT-ZTEL = '01033334444'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000000004'.
GS_STUDENT-ZCODE = 'SSU-02'.
GS_STUDENT-ZKNAME = '손흥민'.
GS_STUDENT-ZENAME = 'SON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01044445555'.
APPEND GS_STUDENT TO GT_STUDENT.

DELETE GT_STUDENT FROM 2 TO 3.

IF SY-SUBRC = 0.
  LOOP AT GT_STUDENT INTO GS_STUDENT.
    WRITE :/ GS_STUDENT-ZCODE, GS_STUDENT-ZKNAME, GS_STUDENT-ZGENDER.
  ENDLOOP.
ENDIF.""",
    r"""CLEAR : GS_STUDENT, GT_STUDENT.

GS_STUDENT-ZPERNR = '0000000001'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '김도윤'.
GS_STUDENT-ZENAME = 'KIM'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01011112222'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000000003'.
GS_STUDENT-ZCODE = 'SSU-01'.
GS_STUDENT-ZKNAME = '손예진'.
GS_STUDENT-ZENAME = 'SON'.
GS_STUDENT-ZGENDER = 'F'.
GS_STUDENT-ZTEL = '01033334444'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000000004'.
GS_STUDENT-ZCODE = 'SSU-02'.
GS_STUDENT-ZKNAME = '손흥민'.
GS_STUDENT-ZENAME = 'SON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01044445555'.
APPEND GS_STUDENT TO GT_STUDENT.

DELETE GT_STUDENT FROM 2.

IF SY-SUBRC = 0.
  LOOP AT GT_STUDENT INTO GS_STUDENT.
    WRITE :/ GS_STUDENT-ZCODE, GS_STUDENT-ZKNAME, GS_STUDENT-ZGENDER.
  ENDLOOP.
ENDIF.""",
    r"""CLEAR : GS_STUDENT, GT_STUDENT.

GS_STUDENT-ZPERNR = '0000000001'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '김도윤'.
GS_STUDENT-ZENAME = 'KIM'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01011112222'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000000003'.
GS_STUDENT-ZCODE = 'SSU-01'.
GS_STUDENT-ZKNAME = '손예진'.
GS_STUDENT-ZENAME = 'SON'.
GS_STUDENT-ZGENDER = 'F'.
GS_STUDENT-ZTEL = '01033334444'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000000004'.
GS_STUDENT-ZCODE = 'SSU-02'.
GS_STUDENT-ZKNAME = '손흥민'.
GS_STUDENT-ZENAME = 'SON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01044445555'.
APPEND GS_STUDENT TO GT_STUDENT.

DELETE GT_STUDENT TO 2.

IF SY-SUBRC = 0.
  LOOP AT GT_STUDENT INTO GS_STUDENT.
    WRITE :/ GS_STUDENT-ZCODE, GS_STUDENT-ZKNAME, GS_STUDENT-ZGENDER.
  ENDLOOP.
ENDIF.""",
    r"""CLEAR : GS_STUDENT, GT_STUDENT.

GS_STUDENT-ZPERNR = '0000000001'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '김도윤'.
GS_STUDENT-ZENAME = 'KIM'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01011112222'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '0000000001'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '김도윤'.
GS_STUDENT-ZENAME = 'KIM'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01011112222'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000000004'.
GS_STUDENT-ZCODE = 'SSU-02'.
GS_STUDENT-ZKNAME = '손흥민'.
GS_STUDENT-ZENAME = 'SON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01044445555'.
APPEND GS_STUDENT TO GT_STUDENT.

SORT GT_STUDENT.

DELETE ADJACENT DUPLICATES FROM GT_STUDENT.

IF SY-SUBRC = 0.
  LOOP AT GT_STUDENT INTO GS_STUDENT.
    WRITE :/ GS_STUDENT-ZCODE, GS_STUDENT-ZKNAME, GS_STUDENT-ZGENDER.
  ENDLOOP.
ENDIF.""",
    r"""CLEAR : GS_STUDENT, GT_STUDENT.

GS_STUDENT-ZPERNR = '0000000001'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '김도윤'.
GS_STUDENT-ZENAME = 'KIM'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01011112222'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '0000000001'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '김도윤'.
GS_STUDENT-ZENAME = 'KIM'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01011112222'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000000004'.
GS_STUDENT-ZCODE = 'SSU-02'.
GS_STUDENT-ZKNAME = '손흥민'.
GS_STUDENT-ZENAME = 'SON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01044445555'.
APPEND GS_STUDENT TO GT_STUDENT.

SORT GT_STUDENT.

DELETE ADJACENT DUPLICATES FROM GT_STUDENT COMPARING ZCODE.

IF SY-SUBRC = 0.
  LOOP AT GT_STUDENT INTO GS_STUDENT.
    WRITE :/ GS_STUDENT-ZCODE, GS_STUDENT-ZKNAME, GS_STUDENT-ZGENDER.
  ENDLOOP.
ENDIF.""",
    r"""DATA : BEGIN OF GS_STUDENT,
  ZPERNR LIKE ZEDT08_001-ZPERNR,
  ZCODE LIKE ZEDT08_001-ZCODE,
  ZKNAME LIKE ZEDT08_001-ZKNAME,
  ZENAME LIKE ZEDT08_001-ZENAME,
  ZGENDER LIKE ZEDT08_001-ZGENDER,
  ZGNAME TYPE C LENGTH 4,
  ZTEL LIKE ZEDT08_001-ZTEL,
END OF GS_STUDENT.

DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT.

CLEAR : GS_STUDENT, GT_STUDENT.

GS_STUDENT-ZPERNR = '0000000001'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '김도윤'.
GS_STUDENT-ZENAME = 'KIM'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZGNAME = '남자'.
GS_STUDENT-ZTEL = '01011112222'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '0000000002'.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '권용민'.
GS_STUDENT-ZENAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZGNAME = '남자'.
GS_STUDENT-ZTEL = '01022223333'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000000003'.
GS_STUDENT-ZCODE = 'SSU-01'.
GS_STUDENT-ZKNAME = '손예진'.
GS_STUDENT-ZENAME = 'SON'.
GS_STUDENT-ZGENDER = 'F'.
GS_STUDENT-ZGNAME = '여자'.
GS_STUDENT-ZTEL = '01033334444'.
APPEND GS_STUDENT TO GT_STUDENT.



LOOP AT GT_STUDENT INTO GS_STUDENT.
  GS_STUDENT-ZGNAME = '성별구분'.

  AT FIRST.
    GS_STUDENT-ZGNAME  = '변경사항'.
  ENDAT.

  CLEAR : GS_STUDENT.
ENDLOOP.""",
    r"""LOOP AT GT_STUDENT INTO GS_STUDENT.
  GS_STUDENT-ZGNAME = '성별구분'.

  AT LAST.
    GS_STUDENT-ZGNAME = '변경사항'.
  ENDAT.

  CLEAR : GS_STUDENT.
ENDLOOP.""",
    r"""SORT GT_STUDENT BY ZCODE ZKNAME ZENAME ZGENDER.

LOOP AT GT_STUDENT INTO GS_STUDENT.
  GS_STUDENT-ZGNAME = '성별구분'.

  AT NEW ZENAME.
    GS_STUDENT-ZGNAME = '변경사항'.
  ENDAT.

  CLEAR : GS_STUDENT.
ENDLOOP.""",
    r"""CLEAR : GS_STUDENT.

SORT GT_STUDENT BY ZCODE ZKNAME ZENAME ZGENDER.

LOOP AT GT_STUDENT INTO GS_STUDENT.
  GS_STUDENT-ZGNAME = '성별구분'.

  AT END OF ZENAME.
    GS_STUDENT-ZGNAME = '변경사항'.
  ENDAT.

  CLEAR : GS_STUDENT.
ENDLOOP.""",
    r"""" 헤더라인 없는 구조체 선언
DATA : BEGIN OF GS_GRADE,
  MANDT LIKE ZEDT08_004-MANDT,
  ZCODE LIKE ZEDT08_004-ZCODE,
  ZPERNR LIKE ZEDT08_004-ZPERNR,
  ZSCHOOL LIKE ZEDT08_004-ZSCHOOL,
  ZSEM LIKE ZEDT08_004-ZSEM,
  ZEXAM LIKE ZEDT08_004-ZEXAM,
  ZMAJOR LIKE ZEDT08_004-ZMAJOR,
  ZMNAME LIKE ZEDT08_004-ZMNAME,
  ZSUM LIKE ZEDT08_004-ZSUM,
  ZWAERS LIKE ZEDT08_004-ZWAERS,
  ZGRADE LIKE ZEDT08_004-ZGRADE,
  ZFLAG LIKE ZEDT08_004-ZFLAG,
  ZAMOUNT LIKE ZEDT08_004-ZAMOUNT,
END OF GS_GRADE.

" 헤더라인 없는 인터널테이블 선언
DATA : GT_GRADE LIKE TABLE OF GS_GRADE.

" GT_GRADE 테이블에 데이터를 가져오는 코드
SELECT * FROM ZEDT00_004 INTO CORRESPONDING FIELDS OF TABLE GT_GRADE.

" ZCODE ZPERNR 기준으로 정렬
SORT GT_GRADE BY ZCODE ZPERNR.

" 장학 판별용 플래그
DATA : GV_GRADE TYPE I VALUE 1.

" 납부 금액과 학적구분 임시 저장 변수
DATA : GV_ZAMOUNT TYPE P.
DATA : GV_ZSCHOOL TYPE C.

" 메인 LOOP
LOOP AT GT_GRADE INTO GS_GRADE.
  " 현재 행의 등록금액과 학적구분을 임시 저장
  GV_ZAMOUNT = GS_GRADE-ZSUM.
  GV_ZSCHOOL = GS_GRADE-ZSCHOOL.

  " 학생 학번이 새로 바뀌면 장학 플래그 초기화
  AT NEW ZPERNR.
    GV_GRADE = 1.
  ENDAT.

  " 성적이 A가 아니면 플래그 수정
  IF GV_GRADE = '1'.
    IF GS_GRADE-ZGRADE <> 'A'.
      GV_GRADE = '2'.
    ENDIF.
  ENDIF.

  " 학생 마지막 행
  AT END OF ZPERNR.
    " 플래그 값이 1이라면 장학 구분
    IF GV_GRADE = '1'.
      GS_GRADE-ZFLAG = 'X'.

      " 학적에 따라 할인율 적용
      IF GV_ZSCHOOL = 'A'.
        GS_GRADE-ZAMOUNT = GV_ZAMOUNT * '0.8'.
      ELSEIF GV_ZSCHOOL = 'B'.
        GS_GRADE-ZAMOUNT = GV_ZAMOUNT * '0.9'.
      ELSE.
        GS_GRADE-ZAMOUNT = GV_ZAMOUNT.
      ENDIF.
    ELSE.
      " 장학대상이 아니면 원금액
      GS_GRADE-ZFLAG = ' '.
      GS_GRADE-ZAMOUNT = GV_ZAMOUNT.
    ENDIF.

    " INTERNAL TABLE에 변경된 값 반영
    MODIFY GT_GRADE FROM GS_GRADE TRANSPORTING ZFLAG ZAMOUNT WHERE ZCODE = GS_GRADE-ZCODE.
  ENDAT.
ENDLOOP.

" 학생 코드 기준 중복 제거
DELETE ADJACENT DUPLICATES FROM GT_GRADE COMPARING ZCODE.

" 원화 표현을 위한 변수
DATA : GV_GRADE-ZAMOUNT TYPE P.
" 총 합계를 위한 변수
DATA : GV_SUM_ZAMOUNT TYPE P VALUE '0'.

" 출력을 위한 LOOP
LOOP AT GT_GRADE INTO GS_GRADE.

  " 원화 표현을 위한 * 100
  GV_GRADE-ZAMOUNT = GS_GRADE-ZAMOUNT * '100'.
  " 각 학생의 납부 금액 합계
  GV_SUM_ZAMOUNT = GV_SUM_ZAMOUNT + GV_GRADE-ZAMOUNT.

  AT FIRST.
    WRITE :/ ' TITLE : LOOP실습 (AT구문)'.
    WRITE :/ ' --------------------------------------------------------------------------- '.
    WRITE :/ ' |   학생코드   |         전공명         | 장학구분 |             납부금액 |'.
    WRITE :/ ' --------------------------------------------------------------------------- '.
  ENDAT.

  WRITE :/ ' | ', GS_GRADE-ZCODE, ' | ', GS_GRADE-ZMNAME, ' |    ', GS_GRADE-ZFLAG, '   |   ', GV_GRADE-ZAMOUNT, ' | '.

  AT LAST.
    WRITE :/ ' --------------------------------------------------------------------------- '.
    WRITE :/ ' |                     합  계                       |   ', GV_SUM_ZAMOUNT, ' | '.
    WRITE :/ ' --------------------------------------------------------------------------- '.
  ENDAT.
ENDLOOP.""",
    r"""DATA : gv_num1.

gv_num1 = 't'.

WRITE gv_num1.""",
    r""""1. DATA선언
DATA : BEGIN OF GS_GRADE.
  INCLUDE TYPE ZEDT00_004.
DATA : ZCAL_SUM TYPE I,
      END OF GS_GRADE.

DATA : GT_GRADE LIKE TABLE OF GS_GRADE.
"FOR 장학구분 변수 선언
DATA : GV_ZCODE LIKE ZEDT00_004-ZCODE.
DATA : GV_SUM TYPE I.
DATA : GV_GRADE, GV_NEW, GV_END, GV_FLAG.
"합계 계산 변수 선언
DATA : GV_SUM_ALL TYPE I.

"2. GET DATA
SELECT * FROM ZEDT00_004
INTO CORRESPONDING FIELDS OF TABLE GT_GRADE.

SORT GT_GRADE BY ZCODE ZPERNR ZEXAM.

CLEAR : GS_GRADE.
CLEAR : GV_ZCODE, GV_GRADE, GV_END, GV_SUM.

"3. MODIFY DATA
LOOP AT GT_GRADE INTO GS_GRADE.
  AT NEW ZCODE.
    GV_ZCODE = GS_GRADE-ZCODE.
    GV_NEW = 'X'.
  ENDAT.

  IF GV_NEW = 'X'.
    IF GS_GRADE-ZGRADE = 'A'.
      GV_GRADE = 'A'.
    ENDIF.
  ELSE.
    IF GV_GRADE = 'A'.
      IF GS_GRADE-ZGRADE = 'A'.
        GV_FLAG = 'X'.
      ELSE.
        CLEAR : GV_GRADE, GV_FLAG.
      ENDIF.
    ENDIF.
  ENDIF.

  AT END OF ZCODE.
    GV_END = 'X'.
    CLEAR : GV_ZCODE.
  ENDAT.

  IF GV_END = 'X'.
    GS_GRADE-ZCAL_SUM = GS_GRADE-ZSUM * 100.
    IF GV_FLAG = 'X'.
      GS_GRADE-ZFLAG = 'X'.
      IF GS_GRADE-ZSCHOOL = 'A'.
        GS_GRADE-ZCAL_SUM = GS_GRADE-ZCAL_SUM * '0.8'.
      ELSEIF GS_GRADE-ZSCHOOL = 'B'.
        GS_GRADE-ZCAL_SUM = GS_GRADE-ZCAL_SUM * '0.9'.
      ENDIF.
    ENDIF.

    GV_SUM_ALL = GV_SUM_ALL + GS_GRADE-ZCAL_SUM.

    MODIFY GT_GRADE FROM GS_GRADE INDEX SY-TABIX.

    CLEAR : GS_GRADE.
    CLEAR : GV_FLAG, GV_GRADE.
  ENDIF.

  CLEAR : GV_NEW, GV_END.
  CLEAR : GS_GRADE.
ENDLOOP.

SORT GT_GRADE DESCENDING BY ZCODE ZCAL_SUM.
DELETE ADJACENT DUPLICATES FROM GT_GRADE COMPARING ZCODE.

SORT GT_GRADE BY ZCODE.

"4. WRITE DATA
LOOP AT GT_GRADE INTO GS_GRADE.
  AT FIRST.
    WRITE :/ '--------------------------------------------------------------------------'.
    WRITE :/ '|   학생코드   |          전공명          |장학구분|       납부금액      |'.
    WRITE :/ '--------------------------------------------------------------------------'.
  ENDAT.

  WRITE :/ '|  ', GS_GRADE-ZCODE, '|    ',GS_GRADE-ZMNAME,'|',  GS_GRADE-ZFLAG  ,'     |  ' ,        GS_GRADE-ZCAL_SUM,'      |'.
  WRITE :/ '--------------------------------------------------------------------------'.

  AT LAST.
    WRITE :/ '|' ,'               ','합      계','                     ','|'   ,'  ',    GV_SUM_ALL   ,'    ','|'  .
    WRITE :/ '--------------------------------------------------------------------------'.
  ENDAT.

ENDLOOP.""",
    r"""DATA : gv_num1 TYPE p VALUE '1234'.
DATA : gv_num2 TYPE p DECIMALS 2 VALUE '12.34'.

DATA : gv_num3 TYPE i VALUE '1234'.

DATA : gv_num4 TYPE n VALUE 1234.
DATA : gv_num5 TYPE n LENGTH 2 VALUE 1234.
DATA : gv_num6 TYPE n LENGTH 3 VALUE 1234.
DATA : gv_num7 TYPE n LENGTH 4 VALUE 1234.


WRITE : gv_num1.
WRITE :/ gv_num2.
WRITE :/ gv_num3.
WRITE :/ gv_num4.
WRITE :/ gv_num5.
WRITE :/ gv_num6.
WRITE :/ gv_num7.

WRITE :/.
WRITE :/.""",
    r"""DATA : gv_text1 VALUE 'A'.
DATA : gv_text2 LENGTH 3 TYPE c VALUE 'ABC'.
DATA : gv_text3(5) TYPE c VALUE 'ABCDE'.
DATA : gv_text4 TYPE string VALUE 'ABCDE'.
DATA : gv_len TYPE i.

DATA : gv_time TYPE T.
DATA : gv_date TYPE D.

gv_time = SY-UZEIT.
gv_date = SY-DATUM.
gv_len = STRLEN( gv_text3 ).

WRITE : gv_text1.
WRITE :/ gv_text2.
WRITE :/ gv_text3.
WRITE :/ gv_text4.
WRITE :/ gv_len.
WRITE :/ gv_time.
WRITE :/ gv_time.
WRITE :/ gv_date.

WRITE :/.
WRITE :/.""",
    r"""DATA : text1 TYPE string,
       text2(4) TYPE C.

text1 = 'ABAP'.
text2 = 'B'.

FIND text2 IN TEXT1.

IF SY-SUBRC = 0.
  WRITE text2.
ENDIF.

WRITE :/.
WRITE :/.""",
    r"""DATA : text3 TYPE string,
       text4(4) TYPE C.

text3 = 'ABAP'.
text4 = 'BBAP'.

REPLACE text3 IN text3 WITH text4.
WRITE  : text3.


WRITE :/.
WRITE :/.""",
    r"""DATA : text5 TYPE string,
       text6(4) TYPE C.

text5 = 'ABAP'.
text6 = 'abap'.

TRANSLATE text5 TO LOWER CASE.
TRANSLATE text6 TO UPPER CASE.
WRITE  : text5.
WRITE  :/ text6.

WRITE :/.
WRITE :/.""",
    r"""DATA : text7 TYPE string,
       text8(5) TYPE C.

text7 = 'ABAP'.
text8 = 'ABAP'.

SHIFT text7.
WRITE : text7.
WRITE :/ text8.

WRITE :/.
WRITE :/.""",
    r"""DATA : text9 TYPE string,
       text10(8) TYPE C,
       text11(8) TYPE C.

text9 = 'AB   AP'.
text10 = 'AB   AP'.
text11 = 'AB   AP'.

CONDENSE text9. "연속된 공백 → 1개의 공백으로 축소
CONDENSE text10 NO-GAPS.

WRITE : text9.
WRITE :/ text10.
WRITE :/ text11.

WRITE :/.
WRITE :/.""",
    r"""DATA : text12 TYPE string,
       text13(8) TYPE C.

text12 = ' B P'.
text13 = 'AAAA'.

OVERLAY text12 WITH text13.

WRITE : text12.
WRITE :/ text13.

WRITE :/.
WRITE :/.""",
    r"""DATA : text14 TYPE string,
       text15(4) TYPE C,
       text16 LENGTH 4 TYPE C.

text14 = 'AB'.
text15 = 'AP'.

CONCATENATE text14 text15 INTO text16.

WRITE : text14.
WRITE :/ text15.
WRITE :/ text16.

WRITE :/.
WRITE :/.""",
    r"""DATA : text17 TYPE string,
       text18(4) TYPE C,
       text19 LENGTH 4 TYPE C.

text17 = 'AB+CD'.
SPLIT text17 AT '+' INTO text18 text19.

WRITE : text17.
WRITE :/ text18.
WRITE :/ text19.

WRITE :/.
WRITE :/.""",
    r"""DATA : gv_num8 TYPE i VALUE 5,
       gv_num9 TYPE i VALUE 3,
       gv_num10 TYPE i.

gv_num10 = gv_num8 + gv_num9.
WRITE : gv_num10.

gv_num10 = gv_num8 - gv_num9.
WRITE :/ gv_num10.

gv_num10 = gv_num8 * gv_num9.
WRITE :/ gv_num10.

gv_num10 = gv_num8 / gv_num9.
WRITE :/ gv_num10.

gv_num10 = gv_num8 DIV gv_num9.
WRITE :/ gv_num10.

gv_num10 = gv_num8 MOD gv_num9.
WRITE :/ gv_num10.

gv_num10 = gv_num8 ** gv_num9.
WRITE :/ gv_num10.

WRITE :/.
WRITE :/.""",
    r"""TYPES T_HELLO(20) TYPE c.

DATA : gv_text5 TYPE T_HELLO.
DATA : gv_text6 LIKE gv_text5. " LIKE는 타입을 좋아한다. 따라한다.

gv_text5 = '안녕하세요'.
gv_text6 = '반갑습니다'.

WRITE : gv_text5.
WRITE : / gv_text6.

WRITE :/.
WRITE :/.""",
    r"""TYPES : BEGIN OF T_ZEDT06, " 학생정보마스터
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 20,
  ZENAME TYPE C LENGTH 20,
  END OF T_ZEDT06.

  DATA : GS_ZEDT06 TYPE T_ZEDT06.

  GS_ZEDT06-ZCODE = 'SSU-06'.
  GS_ZEDT06-ZKNAME = '권용민'.
  GS_ZEDT06-ZENAME = 'kwon'.

 WRITE : / GS_ZEDT06-ZCODE.
 WRITE : / GS_ZEDT06-ZKNAME.
 WRITE : / GS_ZEDT06-ZENAME.

WRITE :/.
WRITE :/.""",
    r"""TYPES : BEGIN OF T_ZEDT06_2.
  INCLUDE TYPE T_ZEDT06.
  TYPES : TITLE TYPE C LENGTH 10,
          GRADE TYPE C LENGTH 1,
END OF T_ZEDT06_2.

DATA : GS_ZEDT06_2 TYPE T_ZEDT06_2.

GS_ZEDT06_2-ZCODE = 'SSU-06'.
GS_ZEDT06_2-ZKNAME = '권용민'.
GS_ZEDT06_2-ZENAME = 'kwon'.
GS_ZEDT06_2-TITLE = '컴퓨터'.
GS_ZEDT06_2-GRADE = '3'.

 WRITE : / GS_ZEDT06_2-ZCODE.
 WRITE : / GS_ZEDT06_2-ZKNAME.
 WRITE : / GS_ZEDT06_2-ZENAME.
 WRITE : / GS_ZEDT06_2-TITLE.
 WRITE : / GS_ZEDT06_2-GRADE.


WRITE :/.
WRITE :/.""",
    r"""DATA : BEGIN OF GS_ZEDT06_3,
  ZCODE TYPE c LENGTH 10,
  ZKNAME TYPE C LENGTH 20,
  ZENAME TYPE C LENGTH 20,
  END OF GS_ZEDT06_3.

GS_ZEDT06_3-ZCODE = 'SSU-06'.
GS_ZEDT06_3-ZKNAME = '권용민'.
GS_ZEDT06_3-ZENAME = 'kwon'.

 WRITE : / GS_ZEDT06_3-ZCODE.
 WRITE : / GS_ZEDT06_3-ZKNAME.
 WRITE : / GS_ZEDT06_3-ZENAME.

WRITE :/.
WRITE :/.""",
    r"""DATA : BEGIN OF GS_ZEDT06_4,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 20,
  ZENAME TYPE C LENGTH 20,
  END OF GS_ZEDT06_4.

DATA : BEGIN OF GS_ZEDT06_4_2.
  INCLUDE STRUCTURE GS_ZEDT06_4.
  DATA : TITLE TYPE C LENGTH 10,
         GRADE TYPE C LENGTH 1,
  END OF GS_ZEDT06_4_2.

GS_ZEDT06_4_2-ZCODE = 'SSU-06'.
GS_ZEDT06_4_2-ZKNAME = '권용민'.
GS_ZEDT06_4_2-ZENAME = 'kwon'.
GS_ZEDT06_4_2-TITLE = '컴퓨터'.
GS_ZEDT06_4_2-GRADE = '3'.

WRITE :/ GS_ZEDT06_4_2-ZCODE.
WRITE :/ GS_ZEDT06_4_2-ZKNAME.
WRITE :/ GS_ZEDT06_4_2-ZENAME.
WRITE :/ GS_ZEDT06_4_2-TITLE.
WRITE :/ GS_ZEDT06_4_2-GRADE.""",
    r"""DATA : GS_ZEDT06 TYPE ZEDT06_001.

GS_ZEDT06-ZCODE = 'ssu-06'.
GS_ZEDT06-ZKNAME = '용민'.
GS_ZEDT06-ZENNAME = 'kwon'.
GS_ZEDT06-ZGENDER = 'M'.
GS_ZEDT06-ZTEL = '0109926861'.

WRITE :/ GS_ZEDT06-ZCODE.
WRITE :/ GS_ZEDT06-ZKNAME.
WRITE :/ GS_ZEDT06-ZENNAME.
WRITE :/ GS_ZEDT06-ZGENDER.
WRITE :/ GS_ZEDT06-ZTEL.""",
    r"""DATA : BEGIN OF GS_ZEDT06_001,
  ZCODE TYPE ZEDT06_001-ZCODE,
  ZKNAME TYPE ZEDT06_001-ZKNAME,
  ZENNAME TYPE ZEDT06_001-ZENNAME,
  ZGENDER TYPE ZEDT06_001-ZGENDER,
  ZTEL TYPE ZEDT06_001-ZTEL,
  END OF GS_ZEDT06_001.

GS_ZEDT06_001-ZCODE = 'ssu-06'.
GS_ZEDT06_001-ZKNAME = '용민'.
GS_ZEDT06_001-ZENNAME = 'kwon'.
GS_ZEDT06_001-ZGENDER = 'M'.
GS_ZEDT06_001-ZTEL = '0109926861'.

WRITE :/ GS_ZEDT06_001-ZCODE.
WRITE :/ GS_ZEDT06_001-ZKNAME.
WRITE :/ GS_ZEDT06_001-ZENNAME.
WRITE :/ GS_ZEDT06_001-ZGENDER.
WRITE :/ GS_ZEDT06_001-ZTEL.""",
    r"""DATA : BEGIN OF GS_ZEDT06_002,
  ZCODE TYPE ZCODE06,
  ZKNAME TYPE ZKNAME06,
  ZENNAME TYPE ZENNAME06,
  ZGENDER TYPE ZGENDER06,
  ZTEL TYPE ZTEL06,
  END OF GS_ZEDT06_002.

GS_ZEDT06_002-ZCODE = 'ssu-06'.
GS_ZEDT06_002-ZKNAME = '용민'.
GS_ZEDT06_002-ZENNAME = 'kwon'.
GS_ZEDT06_002-ZGENDER = 'M'.
GS_ZEDT06_002-ZTEL = '0109926861'.

WRITE :/ GS_ZEDT06_002-ZCODE.
WRITE :/ GS_ZEDT06_002-ZKNAME.
WRITE :/ GS_ZEDT06_002-ZENNAME.
WRITE :/ GS_ZEDT06_002-ZGENDER.
WRITE :/ GS_ZEDT06_002-ZTEL.""",
    r"""DATA : GS_ZEDS06 TYPE ZEDS06_001.

GS_ZEDS06-ZCODE = 'ssu-06'.
GS_ZEDS06-ZKNAME = '용민'.
GS_ZEDS06-ZENNAME = 'kwon'.
GS_ZEDS06-ZGENDER = 'M'.
GS_ZEDS06-ZTEL = '0109926861'.

WRITE :/ GS_ZEDS06-ZCODE.
WRITE :/ GS_ZEDS06-ZKNAME.
WRITE :/ GS_ZEDS06-ZENNAME.
WRITE :/ GS_ZEDS06-ZGENDER.
WRITE :/ GS_ZEDS06-ZTEL.""",
    r"""DATA : GS_ZEDG06 TYPE ZTG06_ZED06.
DATA : GV_ZTITLE TYPE ZTG06_ZTITLE.

GS_ZEDG06-ZCODE = 'ssu-06'.
GS_ZEDG06-ZKNAME = '용민'.
GS_ZEDG06-ZENNAME = 'kwon'.
GS_ZEDG06-ZGENDER = 'M'.
GS_ZEDG06-ZTEL = '01099268961'.
GV_ZTITLE = '컴퓨터학부'.

WRITE :/ GS_ZEDG06-ZCODE.
WRITE :/ GS_ZEDG06-ZKNAME.
WRITE :/ GS_ZEDG06-ZENNAME.
WRITE :/ GS_ZEDG06-ZGENDER.
WRITE :/ GS_ZEDG06-ZTEL.
WRITE :/ GV_ZTITLE.""",
    r"""DATA : GV_ZCODE1 TYPE ZCODE06.
DATA : GV_ZCODE2 TYPE ZEDT06_001-ZCODE.
DATA : GS_ZEDT06_003 TYPE ZEDT06_001.
DATA : GT_ZEDT06 TYPE TABLE OF ZEDT06_001.""",
    r"""DATA : BEGIN OF GS_NAME,
   NAME1 TYPE C LENGTH 10,
   NAME2 TYPE C LENGTH 10,
  END OF GS_NAME.

GS_NAME-NAME1 = '미지정'.
GS_NAME-NAME2 = '현빈'.

MOVE GS_NAME-NAME2 TO GS_NAME-NAME1.

WRITE : GS_NAME-NAME1.
WRITE :/ GS_NAME-NAME2.""",
    r"""DATA : BEGIN OF GS_NAME_001,
  NAME1 TYPE C LENGTH 10,
  DEGREE1 TYPE P DECIMALS 2,
  END OF GS_NAME_001.

GS_NAME_001-NAME1 = '현빈'.
GS_NAME_001-DEGREE1 = '12.34'.

MOVE GS_NAME_001-DEGREE1 TO GS_NAME_001-NAME1.

CONDENSE GS_NAME_001-NAME1 NO-GAPS.

WRITE :/ GS_NAME_001-NAME1.
WRITE :/ GS_NAME_001-DEGREE1.""",
    r"""DATA : GV_DATA1(8) VALUE 'ABCDEFGH',
      GV_DATA2(8).
DATA : GV_START TYPE I VALUE 2,
      GV_LENGTH  TYPE I VALUE 4.

MOVE GV_DATA1+2(3) TO GV_DATA2.
WRITE :/ GV_DATA2.

MOVE GV_DATA1+GV_START(GV_LENGTH) TO GV_DATA2.
WRITE :/ GV_DATA2.""",
    r"""DATA : GV_DATA3(8) TYPE C VALUE 'ABCDEFGH',
      GV_DATA4(8) VALUE 'IJKLMNOP'.
DATA : GV_START2 TYPE I VALUE 2,
      GV_LENGTH2 TYPE I VALUE 4.

MOVE GV_DATA3+GV_START2(GV_LENGTH) TO GV_DATA4+GV_START(GV_LENGTH2).
WRITE :/ GV_DATA4.""",
    r"""DATA : BEGIN OF GS_NAME_002,
  NAME1 TYPE C LENGTH 10,
  NAME2 TYPE C LENGTH 10,
  END OF GS_NAME_002.

GS_NAME_002-NAME1 = '미지정'.
GS_NAME_002-NAME2 = '권용민'.

WRITE GS_NAME_002-NAME2 TO GS_NAME_002-NAME1.

WRITE :/ GS_NAME_002-NAME1.
WRITE :/ GS_NAME_002-NAME2.""",
    r"""DATA : BEGIN OF GS_ZEDT06,
  ZCODE TYPE ZEDT06_001-ZCODE,
  ZKNAME TYPE ZEDT06_001-ZKNAME,
  ZENNAME TYPE ZEDT06_001-ZENNAME,
  ZGENDER TYPE ZEDT06_001-ZGENDER,
  ZTEL TYPE ZEDT06_001-ZTEL,
  END OF GS_ZEDT06.

DATA : BEGIN OF GS_ZEDT06_002,
  ZCODE TYPE ZEDT06_001-ZCODE,
  ZKNAME TYPE ZEDT06_001-ZKNAME,
  ZENNAME TYPE ZEDT06_001-ZENNAME,
  ZGENDER TYPE ZEDT06_001-ZGENDER,
  ZTEL TYPE ZEDT06_001-ZTEL,
  END OF GS_ZEDT06_002.

GS_ZEDT06-ZCODE = 'SSU-06'.
GS_ZEDT06-ZKNAME = '용민'.
GS_ZEDT06-ZENNAME = 'KWON'.
GS_ZEDT06-ZGENDER = 'M'.
GS_ZEDT06-ZTEL = '01099268961'.

MOVE-CORRESPONDING GS_ZEDT06 TO GS_ZEDT06_002.
WRITE :/ GS_ZEDT06_002-ZCODE.
WRITE :/ GS_ZEDT06_002-ZKNAME.
WRITE :/ GS_ZEDT06_002-ZENNAME.
WRITE :/ GS_ZEDT06_002-ZGENDER.
WRITE :/ GS_ZEDT06_002-ZTEL.

MOVE GS_ZEDT06 TO GS_ZEDT06_002.
WRITE :/ GS_ZEDT06_002-ZCODE.
WRITE :/ GS_ZEDT06_002-ZKNAME.
WRITE :/ GS_ZEDT06_002-ZENNAME.
WRITE :/ GS_ZEDT06_002-ZGENDER.
WRITE :/ GS_ZEDT06_002-ZTEL.""",
    r"""DATA : BEGIN OF GS_ZEDT06_003,
  ZCODE TYPE ZEDT06_001-ZCODE,
  ZKNAME TYPE ZEDT06_001-ZKNAME,
  ZENNAME TYPE ZEDT06_001-ZENNAME,
  ZGENDER TYPE ZEDT06_001-ZGENDER,
  ZTEL TYPE ZEDT06_001-ZTEL,
  END OF GS_ZEDT06_003.

DATA : BEGIN OF GS_ZEDT06_004,
  ZGENDER TYPE ZEDT06_001-ZGENDER,
  ZCODE TYPE ZEDT06_001-ZCODE,
  ZKNAME TYPE ZEDT06_001-ZKNAME,
  ZENNAME TYPE ZEDT06_001-ZENNAME,
  ZTEL TYPE ZEDT06_001-ZTEL,
  END OF GS_ZEDT06_004.

GS_ZEDT06_003-ZCODE = 'SSU-06'.
GS_ZEDT06_003-ZKNAME = '용민'.
GS_ZEDT06_003-ZENNAME = 'KWON'.
GS_ZEDT06_003-ZGENDER = 'M'.
GS_ZEDT06_003-ZTEL = '01099268961'.

MOVE-CORRESPONDING GS_ZEDT06_003 TO GS_ZEDT06_004.
WRITE :/ GS_ZEDT06_004-ZCODE.
WRITE :/ GS_ZEDT06_004-ZKNAME.
WRITE :/ GS_ZEDT06_004-ZENNAME.
WRITE :/ GS_ZEDT06_004-ZGENDER.
WRITE :/ GS_ZEDT06_004-ZTEL.

MOVE GS_ZEDT06_003 TO GS_ZEDT06_004.
WRITE :/ GS_ZEDT06_004-ZCODE.
WRITE :/ GS_ZEDT06_004-ZKNAME.
WRITE :/ GS_ZEDT06_004-ZENNAME.
WRITE :/ GS_ZEDT06_004-ZGENDER.
WRITE :/ GS_ZEDT06_004-ZTEL.""",
    r"""DATA : BEGIN OF GS_ZEDT06_005,
  ZCODE TYPE ZEDT06_001-ZCODE,
  ZKNAME TYPE ZEDT06_001-ZKNAME,
  ZENNAME TYPE ZEDT06_001-ZENNAME,
  ZGENDER TYPE ZEDT06_001-ZGENDER,
  ZTEL TYPE ZEDT06_001-ZTEL,
  END OF GS_ZEDT06_005.

DATA : BEGIN OF GS_ZEDT06_006,
  ZZZZCODE TYPE ZEDT06_001-ZCODE,
  ZZZZKNAME TYPE ZEDT06_001-ZKNAME,
  ZZZZENNAME TYPE ZEDT06_001-ZENNAME,
  ZZZZGENDER TYPE ZEDT06_001-ZGENDER,
  ZZZZTEL TYPE ZEDT06_001-ZTEL,
  END OF GS_ZEDT06_006.

GS_ZEDT06_005-ZCODE = 'SSU-06'.
GS_ZEDT06_005-ZKNAME = '용민'.
GS_ZEDT06_005-ZENNAME = 'KWON'.
GS_ZEDT06_005-ZGENDER = 'M'.
GS_ZEDT06_005-ZTEL = '01099268961'.

MOVE-CORRESPONDING GS_ZEDT06_005 TO GS_ZEDT06_006.
WRITE :/ '빈갑 출력 예정'.
WRITE :/ GS_ZEDT06_006-ZZZZCODE.
WRITE :/ GS_ZEDT06_006-ZZZZKNAME.
WRITE :/ GS_ZEDT06_006-ZZZZENNAME.
WRITE :/ GS_ZEDT06_006-ZZZZGENDER.
WRITE :/ GS_ZEDT06_006-ZZZZTEL.
WRITE :/ '빈갑 출력 예정'.

MOVE GS_ZEDT06_005 TO GS_ZEDT06_006.
WRITE :/ GS_ZEDT06_006-ZZZZCODE.
WRITE :/ GS_ZEDT06_006-ZZZZKNAME.
WRITE :/ GS_ZEDT06_006-ZZZZENNAME.
WRITE :/ GS_ZEDT06_006-ZZZZGENDER.
WRITE :/ GS_ZEDT06_006-ZZZZTEL.""",
    r"""CONSTANTS : C_RATE TYPE I VALUE 100.

DATA : GV_SUM1 TYPE I,
       GV_SUM2 TYPE I,
       GV_SUM3 TYPE I.

GV_SUM1 = '10.00'.
GV_SUM2 = '20.00'.
GV_SUM3 = '30.00'.

GV_SUM1 = GV_SUM1 * C_RATE.
GV_SUM2 = GV_SUM2 * C_RATE.
GV_SUM3 = GV_SUM3 * C_RATE.

WRITE :/ GV_SUM1.
WRITE :/ GV_SUM2.
WRITE :/ GV_SUM3.""",
    r"""CONSTANTS : BEGIN OF C_STUDENT,
  ZCODE(10) VALUE 'SSU-06',
  ZKNAME(10) VALUE '강동원',
  ZENNAME(10) VALUE 'KWON',
  END OF C_STUDENT.

WRITE :/ C_STUDENT-ZCODE.
WRITE :/ C_STUDENT-ZKNAME.
WRITE :/ C_STUDENT-ZENNAME.""",
    r"""CONSTANTS : C_NUM1 TYPE I VALUE '10'.
DATA : NUM1 TYPE I VALUE '10'.

NUM1 = NUM1 + 1.

WRITE :/ C_NUM1.
WRITE :/ NUM1.""",
    r"""TABLES : ZEDT06_001.

SELECT SINGLE * FROM ZEDT06_001.

WRITE :/ ZEDT06_001-ZCODE.
WRITE :/ ZEDT06_001-ZKNAME.
WRITE :/ ZEDT06_001-ZENNAME.
WRITE :/ ZEDT06_001-ZGENDER.
WRITE :/ ZEDT06_001-ZTEL.""",
    r"""TABLES : SCARR.

SELECT * FROM SCARR.
  WRITE :/ SCARR-CARRID, SCARR-CARRNAME.
ENDSELECT.""",
    r"""DATA : GS_ZEDT06 TYPE ZEDT06_001.
DATA : GT_ZEDT06 TYPE TABLE OF ZEDT06_001.

GS_ZEDT06-ZCODE = 'ssu-06'.
GS_ZEDT06-ZKNAME = '용민'.
GS_ZEDT06-ZENNAME = 'kwon'.
GS_ZEDT06-ZGENDER = 'M'.
GS_ZEDT06-ZTEL = '01099268961'.

"BREAK-POINT.

APPEND GS_ZEDT06 TO GT_ZEDT06.""",
    r"""DATA : GS_ZEDT06_001 TYPE ZEDT06_001.
DATA : GT_ZEDT06_001 TYPE TABLE OF ZEDT06_001.

GS_ZEDT06_001-ZCODE = 'ssu-06'.
GS_ZEDT06_001-ZKNAME = '용민'.
GS_ZEDT06_001-ZENNAME = 'kwon'.
GS_ZEDT06_001-ZGENDER = 'M'.
GS_ZEDT06_001-ZTEL = '01099268961'.

"BREAK-POINT.

APPEND GS_ZEDT06_001 TO GT_ZEDT06_001.

GS_ZEDT06_001-ZCODE = 'ssu-08'.
GS_ZEDT06_001-ZKNAME = '도윤'.
GS_ZEDT06_001-ZENNAME = 'do'.
GS_ZEDT06_001-ZGENDER = 'M'.
GS_ZEDT06_001-ZTEL = '01099268962'.

"BREAK-POINT.

APPEND GS_ZEDT06_001 TO GT_ZEDT06_001.""",
    r"""DATA : GT_ZEDT06_003 TYPE ZEDT06_001 OCCURS 0 WITH HEADER LINE.

GT_ZEDT06_003-ZCODE = 'ssu-06'.
GT_ZEDT06_003-ZKNAME = '용민'.
GT_ZEDT06_003-ZENNAME = 'kwon'.
GT_ZEDT06_003-ZGENDER = 'M'.
GT_ZEDT06_003-ZTEL = '01099268961'.

APPEND GT_ZEDT06_003.""",
    r"""DATA : BEGIN OF GS_STUDENT,
  ZPERNR TYPE ZEDT06_001-ZPERNR,
  ZCODE TYPE ZEDT06_001-ZCODE,
  ZKNAME TYPE ZEDT06_001-ZKNAME,
  ZENNAME TYPE ZEDT06_001-ZENNAME,
  ZGENDER TYPE ZEDT06_001-ZGENDER,
  ZTEL TYPE ZEDT06_001-ZTEL,
  ZMNAME TYPE ZEDT06_002-ZMNAME,
  END OF GS_STUDENT.

DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT.

GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZPERNR = '00000001'.
GS_STUDENT-ZKNAME = '용민'.
GS_STUDENT-ZENNAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01099268961'.
GS_STUDENT-ZMNAME = '경영학과'.

APPEND GS_STUDENT TO GT_STUDENT.""",
    r"""DATA : BEGIN OF GS_STUDENT_001,
  ZPERNR LIKE ZEDT06_001-ZPERNR,
  ZCODE LIKE ZEDT06_001-ZCODE,
  ZKNAME LIKE ZEDT06_001-ZKNAME,
  ZENNAME LIKE ZEDT06_001-ZENNAME,
  ZGENDER TYPE ZEDT06_001-ZGENDER,
  ZTEL TYPE ZEDT06_001-ZTEL,
  ZMNAME TYPE ZEDT06_002-ZMNAME,
  END OF GS_STUDENT_001.

DATA : GT_STUDENT_001 LIKE TABLE OF GS_STUDENT_001.

GS_STUDENT_001-ZCODE = 'SSU-06'.
GS_STUDENT_001-ZPERNR = '00000001'.
GS_STUDENT_001-ZKNAME = '용민'.
GS_STUDENT_001-ZENNAME = 'KWON'.
GS_STUDENT_001-ZGENDER = 'M'.
GS_STUDENT_001-ZTEL = '01099268961'.
GS_STUDENT_001-ZMNAME = '경영학과'.

APPEND GS_STUDENT_001 TO GT_STUDENT_001.

BREAK-POINT.""",
    r"""DATA : BEGIN OF GS_STUDENT,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  ZCALSS TYPE C,
  END OF GS_STUDENT.

DATA : BEGIN OF GS_STUDENT2,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  ZCLASS TYPE C,
  END OF GS_STUDENT2.

DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT.
DATA : GT_STUDENT2 LIKE TABLE OF GS_STUDENT.

GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '용민'.
GS_STUDENT-ZENAME = 'KWON'.

GS_STUDENT2-ZCODE = 'SSU-08'.
GS_STUDENT2-ZKNAME = '도윤'.
GS_STUDENT2-ZENAME = 'DO'.

APPEND GS_STUDENT TO GT_STUDENT.
APPEND GS_STUDENT2 TO GT_STUDENT2.""",
    r"""DATA : BEGIN OF GS_STUDENT3,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  ZCLASS TYPE C,
  END OF GS_STUDENT3.

DATA : BEGIN OF GS_STUDENT4,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  END OF GS_STUDENT4.

DATA : GT_STUDENT3 LIKE TABLE OF GS_STUDENT3.
DATA : GT_STUDENT4 LIKE TABLE OF GS_STUDENT4.

GS_STUDENT3-ZCODE = 'SSU-06'.
GS_STUDENT3-ZKNAME = '용민'.
GS_STUDENT3-ZENAME = 'KWON'.

APPEND GS_STUDENT3 TO GT_STUDENT3.

MOVE GS_STUDENT3 TO GS_STUDENT4.

APPEND GS_STUDENT4 TO GT_STUDENT4.""",
    r"""DATA : BEGIN OF GS_STUDENT5,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  END OF GS_STUDENT5.

DATA : GT_STUDENT5 LIKE TABLE OF GS_STUDENT5.
DATA : GT_STUDENT6 LIKE TABLE OF GS_STUDENT5.

GS_STUDENT5-ZCODE = 'SSU-06'.
GS_STUDENT5-ZKNAME = '용민'.
GS_STUDENT5-ZENAME = 'KWON'.

APPEND GS_STUDENT5 TO GT_STUDENT5.

MOVE GT_STUDENT5[] TO GT_STUDENT6[].""",
    r"""DATA : BEGIN OF GT_STUDENT7 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT7.

DATA : BEGIN OF GT_STUDENT8 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT8.

GT_STUDENT7-ZCODE = 'SSU-06'.
GT_STUDENT7-ZKNAME = '용민'.
GT_STUDENT7-ZENAME = 'KWON'.

APPEND GT_STUDENT7.

MOVE GT_STUDENT7 TO GT_STUDENT8.
MOVE GT_STUDENT7[] TO GT_STUDENT8[].""",
    r"""DATA : BEGIN OF GT_STUDENT9 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT9.

DATA : BEGIN OF GT_STUDENT10 OCCURS 0,
  ZCLASS TYPE C,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  END OF GT_STUDENT10.

GT_STUDENT9-ZCODE = 'SSU-06'.
GT_STUDENT9-ZKNAME = '용민'.
GT_STUDENT9-ZENAME = 'KWON'.

APPEND GT_STUDENT9.

MOVE GT_STUDENT9[] TO GT_STUDENT10[].""",
    r"""DATA : BEGIN OF GT_STUDENT11 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT11.

DATA : BEGIN OF GT_STUDENT12 OCCURS 0,
  ZCLASS TYPE C,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  END OF GT_STUDENT12.

GT_STUDENT11-ZCODE = 'SSU-06'.
GT_STUDENT11-ZKNAME = '용민'.
GT_STUDENT11-ZENAME = 'KWON'.

APPEND GT_STUDENT11.

MOVE-CORRESPONDING GT_STUDENT11 TO GT_STUDENT12.

APPEND GT_STUDENT12.""",
    r"""DATA : BEGIN OF GT_STUDENT13 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT13.

DATA : BEGIN OF GT_STUDENT14 OCCURS 0,
  ZCLASS TYPE C,
  ZCODE TYPE C LENGTH 10,
  ZKANEM(10) TYPE C,
  ZENAME(10) TYPE C,
END OF GT_STUDENT14.

GT_STUDENT13-ZCODE = 'SSU-06'.
GT_STUDENT13-ZKNAME = '용민'.
GT_STUDENT13-ZENAME = 'KWON'.

APPEND GT_STUDENT13.

MOVE-CORRESPONDING GT_STUDENT13[] TO GT_STUDENT14[].""",
    r"""DATA : BEGIN OF GS_STUDENT15,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GS_STUDENT15.

DATA : GT_STUDENT15 LIKE TABLE OF  GS_STUDENT15.

GS_STUDENT15-ZCODE = 'SSU-06'.
GS_STUDENT15-ZKNAME = '용민'.
GS_STUDENT15-ZENAME = 'KWON'.

APPEND GS_STUDENT15 TO GT_STUDENT15.

" BREAK-POINT.

CLEAR : GT_STUDENT15.""",
    r"""DATA : BEGIN OF GT_STUDENT16 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT16.

GT_STUDENT16-ZCODE = 'SSU-06'.
GT_STUDENT16-ZKNAME = '용민'.
GT_STUDENT16-ZENAME = 'KWON'.

APPEND GT_STUDENT16.

CLEAR : GT_STUDENT16.

" BREAK-POINT.

CLEAR : GT_STUDENT16[].""",
    r"""DATA : BEGIN OF GT_STUDENT17 OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT17.

GT_STUDENT17-ZCODE = 'SSU-06'.
GT_STUDENT17-ZKNAME = '용민'.
GT_STUDENT17-ZENAME = 'KWON'.

APPEND GT_STUDENT17.

REFRESH : GT_STUDENT17.

" BREAK-POINT.

FREE : GT_STUDENT17.""",
    r"""DATA : BEGIN OF GS_STUDENT,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GS_STUDENT.

DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT.

GS_STUDENT-ZCODE = 'SSU-1'.
GS_STUDENT-ZKNAME = '유나'.
GS_STUDENT-ZENAME = 'U'.
APPEND GS_STUDENT TO GT_STUDENT.

GS_STUDENT-ZCODE = 'SSU-2'.
GS_STUDENT-ZKNAME = '용민'.
GS_STUDENT-ZENAME = 'H'.
APPEND GS_STUDENT TO GT_STUDENT.

GS_STUDENT-ZCODE = 'SSU-3'.
GS_STUDENT-ZKNAME = '용민'.
GS_STUDENT-ZENAME = 'K'.
APPEND GS_STUDENT TO GT_STUDENT.

"BREAK-POINT.

SORT GT_STUDENT.

"BREAK-POINT.

SORT GT_STUDENT ASCENDING.

"BREAK-POINT.

SORT GT_STUDENT DESCENDING.

"BREAK-POINT.

SORT GT_STUDENT BY ZKNAME.

"BREAK-POINT.

SORT GT_STUDENT BY ZKNAME DESCENDING.

"BREAK-POINT.

SORT GT_STUDENT BY ZKNAME ZCODE DESCENDING.""",
    r"""DATA : BEGIN OF GS_LINE,
  COL1 TYPE C,
END OF GS_LINE.

DATA : GT_LINE LIKE TABLE OF GS_LINE.

DATA : GV_LINE TYPE I.

GS_LINE-COL1 = SY-INDEX.
APPEND GS_LINE TO GT_LINE.

GS_LINE-COL1 = '2'.
APPEND GS_LINE TO GT_LINE.

GS_LINE-COL1 = '3'.
APPEND GS_LINE TO GT_LINE.

DESCRIBE TABLE GT_LINE LINES GV_LINE.

WRITE :/ GV_LINE.""",
    r"""DATA : BEGIN OF GS_STUDENT_001,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GS_STUDENT_001.

DATA : GT_STUDENT_001 LIKE TABLE OF GS_STUDENT_001.

CLEAR : GS_STUDENT_001.
GS_STUDENT_001-ZCODE = 'SSU-3'.
GS_STUDENT_001-ZKNAME = '용민'.
GS_STUDENT_001-ZENAME = 'K'.
APPEND GS_STUDENT_001 TO GT_STUDENT_001.

CLEAR : GS_STUDENT_001.
GS_STUDENT_001-ZCODE = 'SSU-1'.
GS_STUDENT_001-ZKNAME = '고'.
GS_STUDENT_001-ZENAME = 'y'.
APPEND GS_STUDENT_001 TO GT_STUDENT_001.

CLEAR : GS_STUDENT_001.
GS_STUDENT_001-ZCODE = 'SSU-3'.
GS_STUDENT_001-ZKNAME = '상'.
GS_STUDENT_001-ZENAME = 'Z'.
APPEND GS_STUDENT_001 TO GT_STUDENT_001.""",
    r"""DATA : BEGIN OF GS_STUDENT_002,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GS_STUDENT_002.

DATA : GT_STUDENT_002 LIKE TABLE OF GS_STUDENT_002.

CLEAR : GS_STUDENT_002.
GS_STUDENT_002-ZCODE = 'SSU-3'.
GS_STUDENT_002-ZKNAME = '용민'.
GS_STUDENT_002-ZENAME = 'K'.
INSERT GS_STUDENT_002 INTO TABLE GT_STUDENT_002.

CLEAR : GS_STUDENT_002.
GS_STUDENT_002-ZCODE = 'SSU-1'.
GS_STUDENT_002-ZKNAME = '고'.
GS_STUDENT_002-ZENAME = 'y'.
INSERT GS_STUDENT_002 INTO TABLE GT_STUDENT_002.

CLEAR : GS_STUDENT_002.
GS_STUDENT_002-ZCODE = 'SSU-3'.
GS_STUDENT_002-ZKNAME = '상'.
GS_STUDENT_002-ZENAME = 'Z'.
INSERT GS_STUDENT_002 INTO GT_STUDENT_002 INDEX 2.""",
    r"""DATA : BEGIN OF GS_STUDENT_003,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GS_STUDENT_003.

DATA : GT_STUDENT_003 LIKE TABLE OF GS_STUDENT_003.

CLEAR : GS_STUDENT_003.
GS_STUDENT_003-ZCODE = 'SSU-3'.
GS_STUDENT_003-ZKNAME = '용민'.
GS_STUDENT_003-ZENAME = 'LEE'.
COLLECT GS_STUDENT_003 INTO GT_STUDENT_003.

CLEAR : GS_STUDENT_003.
GS_STUDENT_003-ZCODE = 'SSU-1'.
GS_STUDENT_003-ZKNAME = '고'.
GS_STUDENT_003-ZENAME = 'LEE'.
COLLECT GS_STUDENT_003 INTO GT_STUDENT_003.

CLEAR : GS_STUDENT_003.
GS_STUDENT_003-ZCODE = 'SSU-3'.
GS_STUDENT_003-ZKNAME = '상'.
GS_STUDENT_003-ZENAME = 'Z'.
COLLECT GS_STUDENT_003 INTO GT_STUDENT_003.""",
    r"""DATA : BEGIN OF GS_STUDENT_004,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  ZSUM TYPE I,
END OF GS_STUDENT_004.

DATA : GT_STUDENT_004 LIKE TABLE OF GS_STUDENT_004.

CLEAR : GS_STUDENT_004.
GS_STUDENT_004-ZCODE = 'SSU-1'.
GS_STUDENT_004-ZKNAME = '용'.
GS_STUDENT_004-ZENAME = 'KWON'.
GS_STUDENT_004-ZSUM = '10000'.
COLLECT GS_STUDENT_004 INTO GT_STUDENT_004.

CLEAR : GS_STUDENT_004.
GS_STUDENT_004-ZCODE = 'SSU-1'.
GS_STUDENT_004-ZKNAME = '용'.
GS_STUDENT_004-ZENAME = 'KWON'.
GS_STUDENT_004-ZSUM = '10000'.
COLLECT GS_STUDENT_004 INTO GT_STUDENT_004.

CLEAR : GS_STUDENT_004.
GS_STUDENT_004-ZCODE = 'SSU-2'.
GS_STUDENT_004-ZKNAME = '민'.
GS_STUDENT_004-ZENAME = 'MIN'.
GS_STUDENT_004-ZSUM = '10000'.
COLLECT GS_STUDENT_004 INTO GT_STUDENT_004.

BREAK-POINT.""",
    r"""DATA : BEGIN OF GS_STUDENT,
  ZPERNR LIKE ZEDT06_001-ZPERNR,
  ZCODE LIKE ZEDT06_001-ZCODE,
  ZKNAME LIKE ZEDT06_001-ZKNAME,
  ZENAME LIKE ZEDT06_001-ZKNAME,
  ZGENDER LIKE ZEDT06_001-ZGENDER,
  ZGNAME TYPE C LENGTH 4,
  ZTEL LIKE ZEDT06_001-ZTEL,
  END OF GS_STUDENT.

DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT.

CLEAR : GS_STUDENT, GT_STUDENT.

GS_STUDENT-ZPERNR = '00000001'.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '용민'.
GS_STUDENT-ZENAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '0109926861'.

IF GS_STUDENT-ZGENDER = 'M'.
  GS_STUDENT-ZGNAME = '남자'.
ENDIF.

APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.""",
    r"""DATA : GT_STUDENT_001 LIKE TABLE OF GS_STUDENT.

CLEAR : GS_STUDENT, GT_STUDENT.

GS_STUDENT-ZPERNR = '00000001'.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '용민'.
GS_STUDENT-ZENAME = 'KWON'.
GS_STUDENT-ZGENDER = 'F'.
GS_STUDENT-ZTEL = '0109926861'.

IF GS_STUDENT-ZGENDER = 'M'.
  GS_STUDENT-ZGNAME = '남자'.
ELSE.
  GS_STUDENT-ZGNAME = '여자'.
ENDIF.

APPEND GS_STUDENT TO GT_STUDENT_001.

CLEAR : GS_STUDENT.""",
    r"""DATA : GT_STUDENT_002 LIKE TABLE OF GS_STUDENT.

CLEAR : GS_STUDENT, GT_STUDENT_002.

GS_STUDENT-ZPERNR = '00000001'.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '용민'.
GS_STUDENT-ZENAME = 'KWON'.
GS_STUDENT-ZGENDER = 'Q'.
GS_STUDENT-ZTEL = '0109926861'.

IF GS_STUDENT-ZGENDER = 'M'.
  GS_STUDENT-ZGNAME = '남자'.
ELSEIF GS_STUDENT-ZGENDER = 'F'.
  GS_STUDENT-ZGNAME = '여자'.
ELSE.
    GS_STUDENT-ZGNAME = '기타'.
ENDIF.

APPEND GS_STUDENT TO GT_STUDENT_002.

CLEAR : GS_STUDENT.""",
    r"""DATA : GT_STUDENT_003 LIKE TABLE OF GS_STUDENT.

CLEAR : GS_STUDENT, GT_STUDENT_003.

GS_STUDENT-ZPERNR = '00000001'.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '용민'.
GS_STUDENT-ZENAME = 'KWON'.
GS_STUDENT-ZGENDER = 'Q'.
GS_STUDENT-ZTEL = '0109926861'.

IF ( GS_STUDENT-ZGENDER = 'M' ) AND ( GS_STUDENT-ZKNAME = '용민' ).
  GS_STUDENT-ZGNAME = '남자'.
ENDIF.

APPEND GS_STUDENT TO GT_STUDENT_003.

CLEAR : GS_STUDENT.""",
    r"""DATA : GT_STUDENT_004 LIKE TABLE OF GS_STUDENT.

CLEAR : GS_STUDENT, GT_STUDENT_004.

GS_STUDENT-ZPERNR = '00000001'.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '용민'.
GS_STUDENT-ZENAME = 'KWON'.
GS_STUDENT-ZGENDER = 'Q'.
GS_STUDENT-ZTEL = '0109926861'.

IF ( GS_STUDENT-ZGENDER = 'M' ) OR ( GS_STUDENT-ZKNAME = '도도' ).
  GS_STUDENT-ZGNAME = '남자'.
ENDIF.

APPEND GS_STUDENT TO GT_STUDENT_004.

CLEAR : GS_STUDENT.""",
    r"""DATA : GV_NUM1 TYPE I.
DATA : GV_NUM2 TYPE I.
DATA : GV_NUM3 TYPE I.


WRITE :/ '**1번-IF문에 WIRTE문 출력'.
GV_NUM1 = '100'.
GV_NUM2 = '120'.
WRITE :/ GV_NUM1.
WRITE :/ GV_NUM2.

IF GV_NUM1 < GV_NUM2.
  WRITE :/ 'GV_NUM1이 GV_NUM2보다 작습니다'.
ELSE.
  WRITE :/ 'GV_NUM2이 GV_NUM1보다 작습니다'.
ENDIF.
WRITE :/.



WRITE :/ '**2번-IF문에 WIRTE문 출력'.
GV_NUM3 = '110'.
WRITE :/ GV_NUM1.
WRITE :/ GV_NUM2.
WRITE :/ GV_NUM3.

IF GV_NUM1 < GV_NUM2.
  IF GV_NUM1 < GV_NUM3.
    WRITE :/ 'GV_NUM1이 GV_NUM2, GV_NUM3보다 작습니다.'.
  ELSEIF GV_NUM1 > GV_NUM3.
    WRITE :/ 'GV_NUM3이 GV_NUM1, GV_NUM2보다 작습니다.'.
  ELSE.
    WRITE :/ 'GV_NUM3이 GV_NUM1과 같고 GV_NUM2보다 작습니다.'.
  ENDIF.
ELSEIF GV_NUM1 > GV_NUM2.
  IF GV_NUM2 < GV_NUM3.
    WRITE :/ 'GV_NUM2이 GV_NUM1, GV_NUM3보다 작습니다.'.
  ELSEIF GV_NUM2 > GV_NUM3.
    WRITE :/ 'GV_NUM3이 GV_NUM1, GV_NUM2보다 작습니다.'.
  ELSE.
    WRITE :/ 'GV_NUM3이 GV_NUM2와 같고  GV_NUM1보다 작습니다.'.
  ENDIF.
ELSE.
  IF GV_NUM1 < GV_NUM3.
    WRITE :/ 'GV_NUM1이 GV_NUM2과 같고 GV_NUM3보다 작습니다.'.
  ELSEIF GV_NUM1 > GV_NUM3.
    WRITE :/ 'GV_NUM3이 GV_NUM1, GV_NUM2보다 작습니다.'.
  ELSE.
    WRITE :/ 'GV_NUM1과 GV_NUM2와 GV_NUM3는 같은 수입니다.'.
  ENDIF.
ENDIF.
WRITE :/.



WRITE :/ '**3번-ELSE문에 WIRTE문 출력'.
GV_NUM1 = '100'.
GV_NUM2 = '100'.
WRITE :/ GV_NUM1.
WRITE :/ GV_NUM2.

IF GV_NUM1 > GV_NUM2.
  WRITE :/ 'GV_NUM1이 GV_NUM2보다 큽니다.'.
ELSEIF GV_NUM1 < GV_NUM2.
  WRITE :/ 'GV_NUM2이 GV_NUM1보다 큽니다.'.
ELSE.
  WRITE: / 'GV_NUM1과 GV_NUM2는 같습니다.'.
ENDIF.
WRITE :/.


WRITE :/ '**4번-NUN1, NUM2, NUN3모둔변수를 사용하여 WIRTE문 출력'.
GV_NUM1 = '100'.
GV_NUM2 = '120'.
GV_NUM3 = '110'.

IF GV_NUM1 < GV_NUM2.
  IF GV_NUM2 < GV_NUM3.
    WRITE :/ 'GV_NUM3이' , GV_NUM3 , '가장 큰수입니다.'.
  ELSE.
    WRITE :/ 'GV_NUM2이' , GV_NUM2 , '가장 큰수입니다.'.
  ENDIF.
ELSE.
  IF GV_NUM1 < GV_NUM3.
    WRITE :/ 'GV_NUM3이', GV_NUM3 , '가장 큰수입니다.'.
  ELSE.
    WRITE :/ 'GV_NUM1이' , GV_NUM1 , '가장 큰수입니다.'.
  ENDIF.
ENDIF.
WRITE :/.""",
    r"""DATA : BEGIN OF GS_STUDENT,
  ZCODE TYPE C LENGTH 10,
  ZPERNR TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  ZGENDER TYPE C,
  ZTEL TYPE C LENGTH 10,
  ZGNAME TYPE C LENGTH 10,
END OF GS_STUDENT.

DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT.

CLEAR : GS_STUDENT, GT_STUDENT.

GS_STUDENT-ZPERNR = '00000001'.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '권'.
GS_STUDENT-ZENAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01099268961'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR GS_STUDENT.
GS_STUDENT-ZPERNR = '00000002'.
GS_STUDENT-ZCODE = 'SSU-07'.
GS_STUDENT-ZKNAME = '용'.
GS_STUDENT-ZENAME = 'YONG'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01099268962'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR GS_STUDENT.
GS_STUDENT-ZPERNR = '00000003'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '민'.
GS_STUDENT-ZENAME = 'MIN'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01099268963'.
APPEND GS_STUDENT TO GT_STUDENT.

"BREAK-POINT.

CLEAR GS_STUDENT.
LOOP AT GT_STUDENT INTO GS_STUDENT.
  IF GS_STUDENT-ZGENDER = 'M'.
    GS_STUDENT-ZGNAME = '남자'.
  ELSEIF GS_STUDENT-ZGENDER = 'F'.
    GS_STUDENT-ZGNAME = '여자'.
  ELSE.
    GS_STUDENT-ZGNAME = '기타'.
  ENDIF.

  CLEAR: GS_STUDENT.
ENDLOOP.

"BREAK-POINT.""",
    r"""DATA : BEGIN OF GS_STUDENT_001,
  ZCODE TYPE C LENGTH 10,
  ZPERNR TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  ZGENDER TYPE C,
  ZTEL TYPE C LENGTH 10,
  ZGNAME TYPE C LENGTH 10,
END OF GS_STUDENT_001.

DATA : GT_STUDENT_001 LIKE TABLE OF GS_STUDENT_001.

CLEAR : GS_STUDENT_001, GT_STUDENT_001.

GS_STUDENT_001-ZPERNR = '00000001'.
GS_STUDENT_001-ZCODE = 'SSU-06'.
GS_STUDENT_001-ZKNAME = '권'.
GS_STUDENT_001-ZENAME = 'KWON'.
GS_STUDENT_001-ZGENDER = 'M'.
GS_STUDENT_001-ZTEL = '01099268961'.
APPEND GS_STUDENT_001 TO GT_STUDENT_001.

CLEAR GS_STUDENT_001.
GS_STUDENT_001-ZPERNR = '00000002'.
GS_STUDENT_001-ZCODE = 'SSU-07'.
GS_STUDENT_001-ZKNAME = '용'.
GS_STUDENT_001-ZENAME = 'YONG'.
GS_STUDENT_001-ZGENDER = 'M'.
GS_STUDENT_001-ZTEL = '01099268962'.
APPEND GS_STUDENT_001 TO GT_STUDENT_001.

CLEAR GS_STUDENT_001.
GS_STUDENT_001-ZPERNR = '00000003'.
GS_STUDENT_001-ZCODE = 'SSU-08'.
GS_STUDENT_001-ZKNAME = '민'.
GS_STUDENT_001-ZENAME = 'MIN'.
GS_STUDENT_001-ZGENDER = 'F'.
GS_STUDENT_001-ZTEL = '01099268963'.
APPEND GS_STUDENT_001 TO GT_STUDENT_001.

CLEAR : GS_STUDENT_001.

 "BREAK-POINT.

 LOOP AT GT_STUDENT_001 INTO GS_STUDENT_001 WHERE ZGENDER = 'F'.
   IF GS_STUDENT_001-ZGENDER = 'M'.
     GS_STUDENT_001-ZGNAME = '남자'.
   ELSEIF GS_STUDENT_001-ZGENDER = 'F'.
     GS_STUDENT_001-ZGNAME = '여자'.
   ELSE.
     GS_STUDENT_001-ZGNAME = '기타'.
   ENDIF.

   CLEAR : GS_STUDENT_001.
ENDLOOP.

"BREAK-POINT.""",
    r"""DATA : BEGIN OF GS_STUDENT_002,
  ZCODE TYPE C LENGTH 10,
  ZPERNR TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  ZGENDER TYPE C ,
  ZTEL TYPE C LENGTH 10,
  ZGNAME TYPE C LENGTH 10,
END OF GS_STUDENT_002.

DATA : GT_STUDENT_002 LIKE TABLE OF GS_STUDENT_002.

CLEAR : GS_STUDENT_002, GT_STUDENT_002.
GS_STUDENT_002-ZPERNR = '00000001'.
GS_STUDENT_002-ZCODE = 'SSU-06'.
GS_STUDENT_002-ZKNAME = '권'.
GS_STUDENT_002-ZENAME = 'KWON'.
GS_STUDENT_002-ZGENDER = 'M'.
GS_STUDENT_002-ZTEL = '01099268961'.
APPEND GS_STUDENT_002 TO GT_STUDENT_002.

CLEAR : GS_STUDENT_002.
GS_STUDENT_002-ZPERNR = '00000002'.
GS_STUDENT_002-ZCODE = 'SSU-07'.
GS_STUDENT_002-ZKNAME = '용'.
GS_STUDENT_002-ZENAME = 'YONG'.
GS_STUDENT_002-ZGENDER = 'F'.
GS_STUDENT_002-ZTEL = '01099268962'.
APPEND GS_STUDENT_002 TO GT_STUDENT_002.

CLEAR : GS_STUDENT_002.
GS_STUDENT_002-ZPERNR = '00000003'.
GS_STUDENT_002-ZCODE = 'SSU-08'.
GS_STUDENT_002-ZKNAME = '민'.
GS_STUDENT_002-ZENAME = 'MIN'.
GS_STUDENT_002-ZGENDER = 'M'.
GS_STUDENT_002-ZTEL = '01099268963'.
APPEND GS_STUDENT_002 TO GT_STUDENT_002.

CLEAR : GS_STUDENT_002.

"BREAK-POINT.

LOOP AT GT_STUDENT_002 INTO GS_STUDENT_002 FROM 2 TO 3.
   IF GS_STUDENT_002-ZGENDER = 'M'.
     GS_STUDENT_002-ZGNAME = '남자'.
   ELSEIF GS_STUDENT_001-ZGENDER = 'F'.
     GS_STUDENT_002-ZGNAME = '여자'.
   ELSE.
     GS_STUDENT_002-ZGNAME = '기타'.
   ENDIF.

   CLEAR : GS_STUDENT_002.
ENDLOOP.

"BREAK-POINT.""",
    r"""DATA : BEGIN OF GS_STUDENT_003,
  ZPERNR LIKE ZEDT06_001-ZPERNR,
  ZCODE LIKE ZEDT06_001-ZCODE,
  ZKNAME LIKE ZEDT06_001-ZKNAME,
  ZENAME LIKE ZEDT06_001-ZENNAME,
  ZGENDER LIKE ZEDT06_001-ZGENDER,
  ZGNAME TYPE C LENGTH 4,
  ZTEL LIKE ZEDT06_001-ZTEL,
END OF GS_STUDENT_003.

DATA : GT_STUDENT_003 LIKE TABLE OF GS_STUDENT_003 WITH NON-UNIQUE KEY ZCODE.

CLEAR : GT_STUDENT_003, GS_STUDENT_003.
GS_STUDENT_003-ZPERNR = '00000001'.
GS_STUDENT_003-ZCODE = 'SSU-06'.
GS_STUDENT_003-ZKNAME = '민'.
GS_STUDENT_003-ZENAME = 'MIN'.
GS_STUDENT_003-ZGENDER = 'F'.
GS_STUDENT_003-ZTEL = '01099268963'.
APPEND GS_STUDENT_003 TO GT_STUDENT_003.

CLEAR : GS_STUDENT_003.
GS_STUDENT_003-ZPERNR = '00000002'.
GS_STUDENT_003-ZCODE = 'SSU-07'.
GS_STUDENT_003-ZKNAME = '용'.
GS_STUDENT_003-ZENAME = 'YONG'.
GS_STUDENT_003-ZGENDER = 'F'.
GS_STUDENT_003-ZTEL = '01099268965'.
APPEND GS_STUDENT_003 TO GT_STUDENT_003.

GS_STUDENT_003-ZGENDER = 'M'.
MODIFY TABLE GT_STUDENT_003 FROM GS_STUDENT_003.""",
    r"""GS_STUDENT_003-ZENAME = 'KANG'.
GS_STUDENT_003-ZGENDER = 'F'.
MODIFY TABLE GT_STUDENT_003 FROM GS_STUDENT_003 TRANSPORTING ZGENDER.""",
    r"""CLEAR : GS_STUDENT_003, GS_STUDENT_003.

GS_STUDENT_003-ZPERNR = '00000001'.
GS_STUDENT_003-ZCODE = 'SSU-06'.
GS_STUDENT_003-ZKNAME = '권'.
GS_STUDENT_003-ZENAME = 'KWON'.
GS_STUDENT_003-ZGENDER = 'M'.
GS_STUDENT_003-ZTEL = '01099268961'.
APPEND GS_STUDENT_003 TO GT_STUDENT_003.

CLEAR : GS_STUDENT_003.
GS_STUDENT_003-ZPERNR = '00000002'.
GS_STUDENT_003-ZCODE = 'SSU-07'.
GS_STUDENT_003-ZKNAME = '용'.
GS_STUDENT_003-ZENAME = 'YONG'.
GS_STUDENT_003-ZGENDER = 'F'.
GS_STUDENT_003-ZTEL = '01099268962'.
APPEND GS_STUDENT_003 TO GT_STUDENT_003.

CLEAR : GS_STUDENT_003.
GS_STUDENT_003-ZPERNR = '00000003'.
GS_STUDENT_003-ZCODE = 'SSU-08'.
GS_STUDENT_003-ZKNAME = '민'.
GS_STUDENT_003-ZENAME = 'MIN'.
GS_STUDENT_003-ZGENDER = 'F'.
GS_STUDENT_003-ZTEL = '01099268965'.
APPEND GS_STUDENT_003 TO GT_STUDENT_003.

LOOP AT GT_STUDENT_003 INTO GS_STUDENT_003.
   IF GS_STUDENT_003-ZGENDER = 'M'.
     GS_STUDENT_003-ZGNAME = '남자'.
   ELSEIF GS_STUDENT_003-ZGENDER = 'F'.
     GS_STUDENT_003-ZGNAME = '여자'.
   ELSE.
     GS_STUDENT_003-ZGNAME = '기타'.
   ENDIF.

   MODIFY GT_STUDENT_003 FROM GS_STUDENT_003 TRANSPORTING ZGNAME.

   CLEAR : GS_STUDENT_003.
ENDLOOP.""",
    r"""DATA : GS_STUDENT TYPE ZEDT06_001.
DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT.

CLEAR : GS_STUDENT, GT_STUDENT.

GS_STUDENT-ZPERNR = '00000001'.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '권'.
GS_STUDENT-ZENNAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01099268961'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000002'.
GS_STUDENT-ZCODE = 'SSU-07'.
GS_STUDENT-ZKNAME = '용'.
GS_STUDENT-ZENNAME = 'YONG'.
GS_STUDENT-ZGENDER = 'F'.
GS_STUDENT-ZTEL = '01099268962'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000003'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '민'.
GS_STUDENT-ZENNAME = 'MIN'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01099268962'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.

LOOP AT GT_STUDENT INTO GS_STUDENT.
  IF GS_STUDENT-ZGENDER = 'M'.
    DELETE TABLE GT_STUDENT FROM GS_STUDENT.

    IF SY-SUBRC = 0.
    ELSE.
      WRITE :/ '삭제실패'.
    ENDIF.
  ELSE.
    WRITE :/ GS_STUDENT-ZCODE, GS_STUDENT-ZKNAME, GS_STUDENT-ZGENDER.
  ENDIF.
ENDLOOP.""",
    r"""DATA : GS_STUDENT_001 TYPE ZEDT06_001.
DATA : GT_STUDENT_001 LIKE TABLE OF GS_STUDENT WITH NON-UNIQUE KEY ZGENDER.

CLEAR : GS_STUDENT_001, GT_STUDENT_001.

GS_STUDENT_001-ZPERNR = '00000001'.
GS_STUDENT_001-ZCODE = 'SSU-06'.
GS_STUDENT_001-ZKNAME = '권'.
GS_STUDENT_001-ZENNAME = 'KWON'.
GS_STUDENT_001-ZGENDER = 'M'.
GS_STUDENT_001-ZTEL = '01099268961'.
APPEND GS_STUDENT_001 TO GT_STUDENT_001.

CLEAR : GS_STUDENT.
GS_STUDENT_001-ZPERNR = '00000002'.
GS_STUDENT_001-ZCODE = 'SSU-07'.
GS_STUDENT_001-ZKNAME = '용'.
GS_STUDENT_001-ZENNAME = 'YONG'.
GS_STUDENT_001-ZGENDER = 'F'.
GS_STUDENT_001-ZTEL = '01099268962'.
APPEND GS_STUDENT_001 TO GT_STUDENT_001.

CLEAR : GS_STUDENT.
GS_STUDENT_001-ZPERNR = '00000003'.
GS_STUDENT_001-ZCODE = 'SSU-08'.
GS_STUDENT_001-ZKNAME = '민'.
GS_STUDENT_001-ZENNAME = 'MIN'.
GS_STUDENT_001-ZGENDER = 'M'.
GS_STUDENT_001-ZTEL = '01099268962'.
APPEND GS_STUDENT_001 TO GT_STUDENT_001.

DELETE TABLE GT_STUDENT_001 WITH TABLE KEY ZGENDER = 'F'.

IF SY-SUBRC = 0.
  LOOP AT GT_STUDENT_001 INTO GS_STUDENT_001.
    WRITE :/ GS_STUDENT_001-ZCODE, GS_STUDENT_001-ZKNAME, GS_STUDENT_001-ZGENDER.
  ENDLOOP.
ENDIF.""",
    r"""CLEAR : GS_STUDENT, GT_STUDENT.

GS_STUDENT-ZPERNR = '00000001'.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '권'.
GS_STUDENT-ZENNAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01099268961'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000002'.
GS_STUDENT-ZCODE = 'SSU-07'.
GS_STUDENT-ZKNAME = '용'.
GS_STUDENT-ZENNAME = 'YONG'.
GS_STUDENT-ZGENDER = 'F'.
GS_STUDENT-ZTEL = '01099268962'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000003'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '민'.
GS_STUDENT-ZENNAME = 'MIN'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01099268962'.
APPEND GS_STUDENT TO GT_STUDENT.

DELETE GT_STUDENT WHERE ZGENDER = 'F'.

IF SY-SUBRC = 0.
  LOOP AT GT_STUDENT INTO GS_STUDENT.
      WRITE :/ GS_STUDENT-ZCODE, GS_STUDENT-ZKNAME, GS_STUDENT-ZGENDER.
  ENDLOOP.
ENDIF.""",
    r"""CLEAR : GS_STUDENT, GT_STUDENT.

GS_STUDENT-ZPERNR = '00000001'.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '권'.
GS_STUDENT-ZENNAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01099268961'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000001'.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '권'.
GS_STUDENT-ZENNAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01099268961'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZPERNR = '00000003'.
GS_STUDENT-ZCODE = 'SSU-08'.
GS_STUDENT-ZKNAME = '민'.
GS_STUDENT-ZENNAME = 'MIN'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '01099268962'.
APPEND GS_STUDENT TO GT_STUDENT.

SORT GT_STUDENT.

DELETE ADJACENT DUPLICATES FROM GT_STUDENT COMPARING ZCODE.

IF SY-SUBRC = 0.
  LOOP AT GT_STUDENT INTO GS_STUDENT.
          WRITE :/ GS_STUDENT-ZCODE, GS_STUDENT-ZKNAME, GS_STUDENT-ZGENDER.
  ENDLOOP.
ENDIF.

BREAK-POINT.""",
    r"""DATA : BEGIN OF GS_STUDENT,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
  ZGENDER TYPE C,
  ZGNAME TYPE C LENGTH 10,
  ZTEL TYPE C LENGTH 10,
END OF GS_STUDENT.

DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '권용민'.
GS_STUDENT-ZENAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '0109926861'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '권용민'.
GS_STUDENT-ZENAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '0109926861'.
APPEND GS_STUDENT TO GT_STUDENT.

CLEAR : GS_STUDENT.
GS_STUDENT-ZCODE = 'SSU-06'.
GS_STUDENT-ZKNAME = '권용'.
GS_STUDENT-ZENAME = 'KWON'.
GS_STUDENT-ZGENDER = 'M'.
GS_STUDENT-ZTEL = '0109926861'.
APPEND GS_STUDENT TO GT_STUDENT.

SORT GT_STUDENT BY ZCODE ZKNAME ZENAME ZGENDER.

CLEAR : GS_STUDENT.

LOOP AT GT_STUDENT INTO GS_STUDENT.
  GS_STUDENT-ZGNAME = '성별구분'.

  AT FIRST.
    GS_STUDENT-ZGNAME = '변경사항'.
  ENDAT.

  MODIFY GT_STUDENT FROM GS_STUDENT TRANSPORTING ZGNAME.

  CLEAR : GS_STUDENT.
ENDLOOP.

BREAK-POINT.""",
    r"""CLEAR : GS_STUDENT.

LOOP AT GT_STUDENT INTO GS_STUDENT.
  GS_STUDENT-ZGNAME = '성별구분'.

  AT LAST.
    GS_STUDENT-ZGNAME = '변경사항'.
  ENDAT.

  MODIFY GT_STUDENT FROM GS_STUDENT TRANSPORTING ZGNAME.

  CLEAR : GS_STUDENT.
ENDLOOP.""",
    r"""CLEAR : GS_STUDENT.

SORT GT_STUDENT BY ZCODE ZKNAME ZENAME ZGENDER.

LOOP AT GT_STUDENT INTO GS_STUDENT.
  GS_STUDENT-ZGNAME = '성병구분'.

  AT NEW ZENAME.
    GS_STUDENT-ZGNAME = '변경사항'.
  ENDAT.

  MODIFY GT_STUDENT FROM GS_STUDENT TRANSPORTING ZGNAME.

  CLEAR : GS_STUDENT.
ENDLOOP.""",
    r"""CLEAR : GS_STUDENT.

SORT GT_STUDENT BY ZCODE ZKNAME ZENAME ZGENDER.

LOOP AT GT_STUDENT INTO GS_STUDENT.
  GS_STUDENT-ZGNAME = '변경사항'.

  AT END OF ZENAME.
    GS_STUDENT-ZGNAME = '변경사항'.
  ENDAT.

  MODIFY GT_STUDENT FROM  GS_STUDENT TRANSPORTING ZGNAME.

  CLEAR : GS_STUDENT.

ENDLOOP.""",
    r"""" 사용할 STRUCTURE와 INNERTABLE 선언
DATA : GS_GRADE TYPE ZEDT06_004.
DATA : GT_GRADE TYPE TABLE OF ZEDT06_004.

" 사용할 상수 선언
CONSTANTS : GV_ZSCHOOL_A_SALE_PERCENT TYPE I VALUE 20.
CONSTANTS : GV_ZSCHOOL_B_SALE_PERCENT TYPE I VALUE 10.

" AT 구문 내에서 사용할 변수들 선언
DATA : GV_FLAG TYPE C.
DATA : GV_GRADE TYPE C.
DATA : GV_ZSCHOOL TYPE C.
DATA : GV_ZSUM TYPE P.
DATA : GV_ZAMOUNT TYPE I.
DATA : GV_ALLSUM TYPE I VALUE 0. " 납입액 합계



" 데이터 불러오기
SELECT * FROM ZEDT06_004 INTO CORRESPONDING FIELDS OF TABLE GT_GRADE.

" GS_GRADE STRUCTURE 초기화
CLEAR : GS_GRADE.

" ZCODE, ZPERNR, ZGRADE 기준 오름차순으로 정렬 -> AT 구분 시 활용.
SORT GT_GRADE BY ZCODE ZPERNR ZGRADE.

" 계산 : 학생 별 EXAM의을 확인 후 장학 구분 및 납부액 수정
LOOP AT GT_GRADE INTO GS_GRADE.

  " 매 학생 별 정보 로컬 변수로 입력받기
  GV_ZSCHOOL = GS_GRADE-ZSCHOOL.
  GV_ZSUM = GS_GRADE-ZSUM.

  " 첫번째라는 플래그를 전달 + 기본 상태 TRUE로 설정
  AT NEW ZCODE.
    GV_FLAG = 'T'.
  ENDAT.

  " A값이 아니라면 플래그를 FLASE로 수정.
  IF GV_FLAG = 'T'.
    IF GS_GRADE-ZGRADE <> 'A'.
      GV_FLAG = 'F'.
    ENDIF.
  ENDIF.

  " AT END OF 를 통해 학생의 FLAG값을 확인 후 장학 구분.
  AT END OF ZCODE.

    " 점수가 A인 경우 FLAG를 X로 설정하고 학적에 따라 납부액 설정.
    IF GV_FLAG = 'T'.
      GS_GRADE-ZFLAG = 'X'.

      " 학적에 따른 할인률 반영한 ZAMOUNT 설정.
      IF GV_ZSCHOOL = 'A'.
        GS_GRADE-ZAMOUNT = GV_ZSUM * ( 100 - GV_ZSCHOOL_A_SALE_PERCENT ) / 100 * 100.
      ELSEIF GV_ZSCHOOL = 'B'.
        GS_GRADE-ZAMOUNT = GV_ZSUM * ( 100 - GV_ZSCHOOL_B_SALE_PERCENT ) / 100 * 100.
      ENDIF.
    ELSE.
      GS_GRADE-ZAMOUNT = GV_ZSUM * 100.
    ENDIF.

     " ZFLAG, ZAMOUNT에 대해 변경사항 적용
     MODIFY GT_GRADE FROM GS_GRADE TRANSPORTING ZFLAG ZAMOUNT WHERE ZCODE = GS_GRADE-ZCODE.

     " GS_GRADE 초기화.
     CLEAR : GS_GRADE.

  ENDAT.

ENDLOOP.



" GS_GRADE STRUCTURE 초기화
CLEAR : GS_GRADE.

" ZCODE 기준 중복 필드 제거
DELETE ADJACENT DUPLICATES FROM GT_GRADE COMPARING ZCODE.

" 출력 : 학생 별 ( 학생코드, 전공명, 장학구분, 납부금액 ) 출력하기
LOOP AT GT_GRADE INTO GS_GRADE.

  GV_ZAMOUNT = GS_GRADE-ZAMOUNT.

  " 테이블 시작 출력
  AT FIRST.
    WRITE :/ '-----------------------------------------------------------------------'.
    WRITE :/ '|   학생코드   |          전공명          |장학구분|     납부금액     |'.
    WRITE :/ '-----------------------------------------------------------------------'.
  ENDAT.

  " ZFLAG가 X면 X출력 아니면 빈칸 출력 제어.
  IF GS_GRADE-ZFLAG = 'X'.
    GS_GRADE-ZFLAG = 'X'.
  ELSE.
    GS_GRADE-ZFLAG = ' '.
  ENDIF.

  " 테이블 내용 출력. (학생 별 최초 값 출력)
  WRITE :/ '|  ', GS_GRADE-ZCODE, '|    ',GS_GRADE-ZMNAME,'|',  GS_GRADE-ZFLAG  ,'     |' , GV_ZAMOUNT, '     |'.
  WRITE :/ '-----------------------------------------------------------------------'.

    " 학생 별 ZAMOUNT값 합산.
  GV_ALLSUM = GV_ALLSUM + GS_GRADE-ZAMOUNT.

  " 테이블 종료 출력
  AT LAST.
    WRITE :/ '|', '             ','합      계','                       ', '|','', GV_ALLSUM, '   |   '.
    WRITE :/ '-----------------------------------------------------------------------'.
  ENDAT.

ENDLOOP."""

]


id_counter = 1
dataset = []
for code in safe_templates:
    dataset.append({
        "id": f"ABAP-me-{id_counter}",
        "cwe": "NONE",
        "label": "safe",
        "code": code
    })
    id_counter += 1

with open("abap_dataset.jsonl", "a", encoding="utf-8") as f:
    for item in dataset:
        f.write(json.dumps(item, ensure_ascii=False) + "\n")